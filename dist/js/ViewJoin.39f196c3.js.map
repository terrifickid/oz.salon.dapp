{"version":3,"file":"js/ViewJoin.39f196c3.js","mappings":"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","sources":["webpack://oz.salon.dapp/./src/components/AppContent.vue","webpack://oz.salon.dapp/./src/components/AppContent.vue?64bb","webpack://oz.salon.dapp/./src/components/AppShell.vue","webpack://oz.salon.dapp/./src/components/AppFooter.vue","webpack://oz.salon.dapp/./src/components/AppLogo.vue","webpack://oz.salon.dapp/./src/components/AppLogo.vue?d041","webpack://oz.salon.dapp/./src/components/AppFooter.vue?f367","webpack://oz.salon.dapp/./src/components/AppLoader.vue","webpack://oz.salon.dapp/./src/components/AppLoader.vue?2266","webpack://oz.salon.dapp/./src/components/WalletConnect.vue","webpack://oz.salon.dapp/./src/components/WalletConnect.vue?2bfb","webpack://oz.salon.dapp/./src/components/AppShell.vue?e99e","webpack://oz.salon.dapp/./src/views/ViewJoin.vue","webpack://oz.salon.dapp/./src/components/FormKyc.vue","webpack://oz.salon.dapp/./src/components/Form/InputText.vue","webpack://oz.salon.dapp/./src/components/Form/FormLabel.vue","webpack://oz.salon.dapp/./src/components/Form/FormLabel.vue?8683","webpack://oz.salon.dapp/./src/components/Form/InputText.vue?e6d6","webpack://oz.salon.dapp/./src/components/FormKyc.vue?e903","webpack://oz.salon.dapp/./src/components/FormApply.vue","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/_version.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/address.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/array.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/null.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/number.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/string.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/fragments.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/abi-coder.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/interface.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/contracts/lib.esm/_version.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/contracts/lib.esm/index.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/units/lib.esm/_version.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/units/lib.esm/index.js","webpack://oz.salon.dapp/./src/components/FormApply.vue?1bfd","webpack://oz.salon.dapp/./src/components/FormProposal.vue","webpack://oz.salon.dapp/./src/components/FormProposal.vue?f90f","webpack://oz.salon.dapp/./src/views/ViewJoin.vue?e8a4"],"sourcesContent":["<template>\n  <div class=\"h-screen flex px-3 overflow-scroll\">\n    <slot></slot>\n  </div>\n</template>\n","import { render } from \"./AppContent.vue?vue&type=template&id=612e4a04\"\nconst script = {}\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div :class=\"salonClass\" class=\"min-h-screen\">\n    <div v-if=\"walletAddress\">\n      <AppHeader :colors=\"colors\" />\n      <AppLoader v-if=\"!ready\" />\n      <slot v-if=\"ready\"></slot>\n      <AppFooter :colors=\"colors\" />\n    </div>\n    <div v-if=\"!walletAddress\">\n      <WalletConnect\n        :textClass=\"'text-black'\"\n        :backgroundClass=\"'bg-tope'\"\n        :fillClass=\"'fill-black'\"\n        class=\"fixed h-full\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n\nimport AppFooter from \"@/components/AppFooter.vue\";\nimport AppHeader from \"@/components/AppHeader.vue\";\nimport AppLoader from \"@/components/AppLoader.vue\";\nimport WalletConnect from \"@/components/WalletConnect.vue\";\nexport default {\n  components: { AppFooter, AppLoader, AppHeader, WalletConnect },\n  props: [\"colors\", \"isLoaded\"],\n  computed: {\n    salonClass() {\n      return \"bg-\" + this.colors[0] + \" \" + \"text-\" + this.colors[1];\n    },\n    profile() {\n      return this.$store.state.profile;\n    },\n    walletAddress() {\n      return this.$store.state.walletAddress;\n    },\n    connecting() {\n      return this.$store.state.connecting;\n    },\n    ready() {\n      return (\n        this.walletAddress && !(\"loading\" in this.profile) && this.isLoaded\n      );\n    },\n  },\n  methods: {\n    mounted() {\n      console.log(this.background);\n    },\n    connect() {\n      this.$store.dispatch(\"connect\");\n    },\n    disconnect() {\n      this.$store.dispatch(\"disconnect\");\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    v-if=\"display\"\n    class=\"fixed left-0 right-0 bottom-0 p-3 z-10\"\n    :class=\"{ ['bg-' + colors[0]]: true }\"\n  >\n    <div class=\"grid grid-cols-10\">\n      <div\n        class=\"col-start-7 col-span-4 sm:col-start-8 sm:col-span-3 lg:col-start-9 lg:col-span-2\"\n      >\n        <a href=\"/#/\"><AppLogo :color=\"'fill-' + colors[1]\" /></a>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport AppLogo from \"@/components/AppLogo.vue\";\nexport default {\n  props: [\"colors\"],\n  computed: {\n    display() {\n      return this.colors?.length;\n    },\n  },\n  components: {\n    AppLogo,\n  },\n};\n</script>\n","<template>\n  <svg\n    version=\"1.1\"\n    id=\"Layer_1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 5368 1509\"\n    style=\"enable-background: new 0 0 5368 1509\"\n    xml:space=\"preserve\"\n  >\n    <path\n      :class=\"color\"\n      d=\"M4965.8,2.15c-135.62,0-185.13,73.19-275.54,73.19C4597.7,75.34,4571.86,0,4470.69,0\n    C4340.08,0,4231,126.35,4149.1,299.13C4066.8,122.58,3883.31,2.15,3631.16,2.15c-199.69,0-357.73,75.53-456.34,194.65\n    c-33.52-125.01-141.1-179.58-260.48-179.58c-190.55,0-367.91,139.88-460.47,389.02C2348.23,136.26,2102.72,2.15,1805.72,2.15\n    c-256.16,0-467.12,88.26-467.12,238.94c0,68.88,43.05,116.24,107.63,116.24c36.59,0,86.11-15.07,157.14-15.07\n    s157.14,15.07,157.14,94.72c0,86.11-96.87,118.4-202.35,157.14c-149.98,56.4-261.78,128.84-326.79,228.21\n    c-31.44-43.56-74.56-85.62-131.72-127.04L944.67,583.37c-62.43-45.21-88.26-88.26-88.26-133.46c0-55.97,40.9-83.95,92.56-83.95\n    c103.33,0,114.09,111.94,226.03,111.94c86.11,0,131.31-64.58,131.31-135.62c0-189.43-327.2-340.12-645.79-340.12\n    c-327.2,0-538.16,137.77-538.16,378.86c0,142.07,73.19,262.62,266.93,402.54l245.4,176.52c45.21,32.29,77.5,73.19,77.5,120.55\n    c0,53.82-43.05,88.26-94.72,88.26c-148.53,0-127.01-282-370.25-282c-146.38,0-243.25,101.17-243.25,238.94\n    c0,223.87,256.16,383.17,650.1,383.17c290.66,0,476.19-88.06,571.12-218.3c80.42,137.72,239.92,218.3,457.84,218.3\n    c154.99,0,249.71-40.9,342.27-40.9c88.26,0,96.87,40.9,161.45,40.9c59.85,0,198.48-36.11,273.14-313.48\n    c113.21,232.65,353.84,313.48,691.24,313.48c363.8,0,628.57-86.11,628.57-288.45c0-81.13-42.36-144.37-102.17-177.91\n    c121-7.34,224.54-43.44,306.63-100.4c-2.83,35.94-4.27,70.1-4.27,101.79c0,297.06,107.63,464.97,307.83,464.97\n    c200.2,0,290.61-161.45,258.32-514.48l-15.07-165.75c-25.83-294.91,30.14-436.99,165.75-436.99c92.56,0,129.16,66.73,129.16,157.14\n    c0,223.87-226.03,460.66-226.03,708.22c0,152.84,101.17,251.86,241.1,251.86c262.62,0,523.09-361.64,523.09-891.19\n    C5364.04,107.63,5127.25,2.15,4965.8,2.15z M1812.18,1078.47c-62.43,0-116.24-45.21-116.24-131.31\n    c0-105.48,73.19-180.82,161.45-180.82c83.95,0,116.24,66.73,116.24,127.01C1973.63,994.52,1893.98,1078.47,1812.18,1078.47z\n     M3129.6,1134.44c-103.33,0-157.14-49.51-157.14-165.75c0-114.22,49.59-220.93,100.92-328.09\n    c42.95,193.82,192.96,344.52,415.18,389.57C3379.68,1061.57,3257.95,1134.44,3129.6,1134.44z M3631.16,654.4\n    c-75.34,0-127.01-62.43-127.01-152.84s51.66-150.68,127.01-150.68s122.7,60.27,122.7,150.68S3706.5,654.4,3631.16,654.4z\"\n    />\n  </svg>\n</template>\n<script>\nexport default {\n  props: [\"color\"],\n};\n</script>\n","import { render } from \"./AppLogo.vue?vue&type=template&id=337d5780\"\nimport script from \"./AppLogo.vue?vue&type=script&lang=js\"\nexport * from \"./AppLogo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./AppFooter.vue?vue&type=template&id=122a358a\"\nimport script from \"./AppFooter.vue?vue&type=script&lang=js\"\nexport * from \"./AppFooter.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"min-h-screen flex items-center justify-center\">\n    <span class=\"loader\"></span>\n  </div>\n</template>\n<script></script>\n<style scoped>\n.loader {\n  width: 24px;\n  height: 24px;\n  display: inline-block;\n  position: relative;\n  background: #000;\n  box-sizing: border-box;\n  animation: animloader 2s linear infinite;\n}\n\n@keyframes animloader {\n  0% {\n    transform: translate(0, 0) rotateX(0) rotateY(0);\n  }\n  25% {\n    transform: translate(100%, 0) rotateX(0) rotateY(180deg);\n  }\n  50% {\n    transform: translate(100%, 100%) rotateX(-180deg) rotateY(180deg);\n  }\n  75% {\n    transform: translate(0, 100%) rotateX(-180deg) rotateY(360deg);\n  }\n  100% {\n    transform: translate(0, 0) rotateX(0) rotateY(360deg);\n  }\n}\n</style>\n","import { render } from \"./AppLoader.vue?vue&type=template&id=e724351e&scoped=true\"\nconst script = {}\n\nimport \"./AppLoader.vue?vue&type=style&index=0&id=e724351e&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e724351e\"]])\n\nexport default __exports__","<template>\n  <div\n    class=\"flex w-full items-center justify-center\"\n    :class=\"{ [textClass]: true, [backgroundClass]: true }\"\n  >\n    <AppHeader :backgroundClass=\"backgroundClass\" :textClass=\"textClass\" />\n    <button\n      class=\"bg-electric text-silver rounded px-8 py-6 text-2xl shadow-sm op flex items-center\"\n      @click=\"connect\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"w-48 h-48 relative left-20 bottom-20\"\n        viewBox=\"0 0 212 189\"\n      >\n        <g fill=\"none\" fill-rule=\"evenodd\">\n          <polygon\n            fill=\"#CDBDB2\"\n            points=\"60.75 173.25 88.313 180.563 88.313 171 90.563 168.75 106.313 168.75 106.313 180 106.313 187.875 89.438 187.875 68.625 178.875\"\n          />\n          <polygon\n            fill=\"#CDBDB2\"\n            points=\"105.75 173.25 132.75 180.563 132.75 171 135 168.75 150.75 168.75 150.75 180 150.75 187.875 133.875 187.875 113.063 178.875\"\n            transform=\"matrix(-1 0 0 1 256.5 0)\"\n          />\n          <polygon\n            fill=\"#393939\"\n            points=\"90.563 152.438 88.313 171 91.125 168.75 120.375 168.75 123.75 171 121.5 152.438 117 149.625 94.5 150.188\"\n          />\n          <polygon\n            fill=\"#F89C35\"\n            points=\"75.375 27 88.875 58.5 95.063 150.188 117 150.188 123.75 58.5 136.125 27\"\n          />\n          <polygon\n            fill=\"#F89D35\"\n            points=\"16.313 96.188 .563 141.75 39.938 139.5 65.25 139.5 65.25 119.813 64.125 79.313 58.5 83.813\"\n          />\n          <polygon\n            fill=\"#D87C30\"\n            points=\"46.125 101.25 92.25 102.375 87.188 126 65.25 120.375\"\n          />\n          <polygon\n            fill=\"#EA8D3A\"\n            points=\"46.125 101.813 65.25 119.813 65.25 137.813\"\n          />\n          <polygon\n            fill=\"#F89D35\"\n            points=\"65.25 120.375 87.75 126 95.063 150.188 90 153 65.25 138.375\"\n          />\n          <polygon\n            fill=\"#EB8F35\"\n            points=\"65.25 138.375 60.75 173.25 90.563 152.438\"\n          />\n          <polygon\n            fill=\"#EA8E3A\"\n            points=\"92.25 102.375 95.063 150.188 86.625 125.719\"\n          />\n          <polygon\n            fill=\"#D87C30\"\n            points=\"39.375 138.938 65.25 138.375 60.75 173.25\"\n          />\n          <polygon\n            fill=\"#EB8F35\"\n            points=\"12.938 188.438 60.75 173.25 39.375 138.938 .563 141.75\"\n          />\n          <polygon\n            fill=\"#E8821E\"\n            points=\"88.875 58.5 64.688 78.75 46.125 101.25 92.25 102.938\"\n          />\n          <polygon\n            fill=\"#DFCEC3\"\n            points=\"60.75 173.25 90.563 152.438 88.313 170.438 88.313 180.563 68.063 176.625\"\n          />\n          <polygon\n            fill=\"#DFCEC3\"\n            points=\"121.5 173.25 150.75 152.438 148.5 170.438 148.5 180.563 128.25 176.625\"\n            transform=\"matrix(-1 0 0 1 272.25 0)\"\n          />\n          <polygon\n            fill=\"#393939\"\n            points=\"70.313 112.5 64.125 125.438 86.063 119.813\"\n            transform=\"matrix(-1 0 0 1 150.188 0)\"\n          />\n          <polygon fill=\"#E88F35\" points=\"12.375 .563 88.875 58.5 75.938 27\" />\n          <path\n            fill=\"#8E5A30\"\n            d=\"M12.3750002,0.562500008 L2.25000003,31.5000005 L7.87500012,65.250001 L3.93750006,67.500001 L9.56250014,72.5625 L5.06250008,76.5000011 L11.25,82.1250012 L7.31250011,85.5000013 L16.3125002,96.7500014 L58.5000009,83.8125012 C79.1250012,67.3125004 89.2500013,58.8750003 88.8750013,58.5000009 C88.5000013,58.1250009 63.0000009,38.8125006 12.3750002,0.562500008 Z\"\n          />\n          <g transform=\"matrix(-1 0 0 1 211.5 0)\">\n            <polygon\n              fill=\"#F89D35\"\n              points=\"16.313 96.188 .563 141.75 39.938 139.5 65.25 139.5 65.25 119.813 64.125 79.313 58.5 83.813\"\n            />\n            <polygon\n              fill=\"#D87C30\"\n              points=\"46.125 101.25 92.25 102.375 87.188 126 65.25 120.375\"\n            />\n            <polygon\n              fill=\"#EA8D3A\"\n              points=\"46.125 101.813 65.25 119.813 65.25 137.813\"\n            />\n            <polygon\n              fill=\"#F89D35\"\n              points=\"65.25 120.375 87.75 126 95.063 150.188 90 153 65.25 138.375\"\n            />\n            <polygon\n              fill=\"#EB8F35\"\n              points=\"65.25 138.375 60.75 173.25 90 153\"\n            />\n            <polygon\n              fill=\"#EA8E3A\"\n              points=\"92.25 102.375 95.063 150.188 86.625 125.719\"\n            />\n            <polygon\n              fill=\"#D87C30\"\n              points=\"39.375 138.938 65.25 138.375 60.75 173.25\"\n            />\n            <polygon\n              fill=\"#EB8F35\"\n              points=\"12.938 188.438 60.75 173.25 39.375 138.938 .563 141.75\"\n            />\n            <polygon\n              fill=\"#E8821E\"\n              points=\"88.875 58.5 64.688 78.75 46.125 101.25 92.25 102.938\"\n            />\n            <polygon\n              fill=\"#393939\"\n              points=\"70.313 112.5 64.125 125.438 86.063 119.813\"\n              transform=\"matrix(-1 0 0 1 150.188 0)\"\n            />\n            <polygon\n              fill=\"#E88F35\"\n              points=\"12.375 .563 88.875 58.5 75.938 27\"\n            />\n            <path\n              fill=\"#8E5A30\"\n              d=\"M12.3750002,0.562500008 L2.25000003,31.5000005 L7.87500012,65.250001 L3.93750006,67.500001 L9.56250014,72.5625 L5.06250008,76.5000011 L11.25,82.1250012 L7.31250011,85.5000013 L16.3125002,96.7500014 L58.5000009,83.8125012 C79.1250012,67.3125004 89.2500013,58.8750003 88.8750013,58.5000009 C88.5000013,58.1250009 63.0000009,38.8125006 12.3750002,0.562500008 Z\"\n            />\n          </g>\n        </g>\n      </svg>\n    </button>\n    <AppFooter :backgroundClass=\"backgroundClass\" :fillClass=\"fillClass\" />\n  </div>\n</template>\n<script>\nimport AppHeader from \"@/components/AppHeader.vue\";\nimport AppFooter from \"@/components/AppFooter.vue\";\nexport default {\n  props: [\"backgroundClass\", \"textClass\", \"fillClass\"],\n  components: {\n    AppFooter,\n    AppHeader,\n  },\n  methods: {\n    connect() {\n      this.$store.dispatch(\"connect\");\n    },\n  },\n};\n</script>\n<style>\n.op:hover {\n  opacity: 0.85;\n}\n</style>\n","import { render } from \"./WalletConnect.vue?vue&type=template&id=10a4f958\"\nimport script from \"./WalletConnect.vue?vue&type=script&lang=js\"\nexport * from \"./WalletConnect.vue?vue&type=script&lang=js\"\n\nimport \"./WalletConnect.vue?vue&type=style&index=0&id=10a4f958&lang=css\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./AppShell.vue?vue&type=template&id=4752c539\"\nimport script from \"./AppShell.vue?vue&type=script&lang=js\"\nexport * from \"./AppShell.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <AppShell :colors=\"['white', 'black']\" isLoaded=\"loaded\">\n    <template v-if=\"isNew\"><FormKyc /></template>\n    <template v-if=\"!isKycApproved && !isNew\">\n      <AppContent class=\"items-center justify-center\">\n        <h1 class=\"text-4xl text-center font-light\">\n          Your KYC application<br />is being reviewed.\n        </h1></AppContent\n      >\n    </template>\n    <template v-if=\"isKycApproved && !isApplied\">\n      <AppContent class=\"items-center justify-center\"><FormApply /></AppContent\n    ></template>\n    <template v-if=\"isApplied && !isMember\"\n      ><AppContent class=\"items-center justify-center\"\n        ><FormProposal :id=\"profile.onboard['en-US'].sys.id\" /></AppContent\n    ></template>\n    <template v-if=\"isMember\"\n      ><AppContent class=\"pt-24\">\n        <div class=\"grid grid-cols-12 w-full\">\n          <div class=\"col-span-10 col-start-2\">\n            <p class=\"text-5xl\">\n              Hello,<br />{{ this.profile.firstName[\"en-US\"] }}\n            </p>\n          </div>\n        </div>\n      </AppContent></template\n    >\n  </AppShell>\n</template>\n\n<script>\n// @ is an alias to /src\nimport AppShell from \"@/components/AppShell.vue\";\nimport FormKyc from \"@/components/FormKyc\";\nimport FormApply from \"@/components/FormApply.vue\";\nimport FormProposal from \"@/components/FormProposal.vue\";\nimport AppContent from \"@/components/AppContent.vue\";\nexport default {\n  name: \"DappHome\",\n  components: { AppShell, FormKyc, FormApply, AppContent, FormProposal },\n  computed: {\n    loaded() {\n      return this.profile();\n    },\n    isNew() {\n      if (\"approved\" in this.profile) return false;\n      return true;\n    },\n    isKycApproved() {\n      if (this.profile.approved) return this.profile.approved[\"en-US\"];\n      return false;\n    },\n    isApplied() {\n      if (\"onboard\" in this.profile) {\n        if (this.profile.onboard[\"en-US\"]) return true;\n      }\n      return false;\n    },\n    isMember() {\n      if (\"salonUnits\" in this.profile) {\n        return this.profile.salonUnits[\"en-US\"];\n      }\n      return false;\n    },\n    profile() {\n      return this.$store.state.profile;\n    },\n  },\n};\n</script>\n","<template>\n  <full-page ref=\"fullpage\" :options=\"options\">\n    <div class=\"section\">\n      <div class=\"grid grid-cols-12 px-3\">\n        <InputText\n          class=\"col-span-11 md:col-span-6 md:col-start-2\"\n          :count=\"1\"\n          :title=\"'Form Field Title'\"\n          :required=\"true\"\n          @clicked=\"next\"\n        />\n      </div>\n    </div>\n    <div class=\"section\">\n      <div class=\"grid grid-cols-12 px-3\">\n        <InputText\n          class=\"col-span-11 md:col-span-6 md:col-start-2\"\n          :count=\"2\"\n          :title=\"'Form Field Title'\"\n          :required=\"true\"\n          @clicked=\"next\"\n        />\n      </div>\n    </div>\n    <div class=\"section\">\n      <div class=\"grid grid-cols-12 px-3\">\n        <InputText\n          class=\"col-span-11 md:col-span-6 md:col-start-2\"\n          :count=\"3\"\n          :title=\"'Form Field Title'\"\n          :required=\"true\"\n          @clicked=\"next\"\n        />\n      </div>\n    </div>\n    <div class=\"section\">\n      <div class=\"grid grid-cols-12 px-3\">\n        <InputText\n          class=\"col-span-11 md:col-span-6 md:col-start-2\"\n          :count=\"4\"\n          :title=\"'Form Field Title'\"\n          :required=\"true\"\n          @clicked=\"next\"\n        />\n      </div>\n    </div>\n  </full-page>\n</template>\n<script>\nimport axios from \"axios\";\nimport InputText from \"@/components/Form/InputText.vue\";\nexport default {\n  components: { InputText },\n  data() {\n    return {\n      btnTxt: \"Submit\",\n      sending: false,\n      options: {\n        licenseKey: \"K9EP6-N164H-2BKM8-MJLGI-KSURM\",\n        controlArrows: true,\n        scrollBar: false,\n        scrollingSpeed: 500,\n        navigation: true,\n        navigationPosition: \"right\",\n      },\n    };\n  },\n  methods: {\n    next() {\n      console.log(\"next\");\n      this.$refs.fullpage.api.moveSectionDown();\n    },\n    async submitForm() {\n      this.sending = true;\n      this.btnTxt = \"Sending...\";\n      console.log(\"Ran Submit!\");\n      try {\n        const res = await axios.post(\n          \"https://salontest-terrifickid.cloud.okteto.net/onboard\",\n          {\n            walletAddress: this.userAddress,\n            legalNameOfPerson: this.legalNameOfPerson,\n          }\n        );\n        console.log(\"success\", res.data);\n        this.$store.dispatch(\"connect\");\n      } catch (error) {\n        console.log(\"error\", error);\n        this.btnTxt = \"error!\";\n      }\n    },\n  },\n  computed: {\n    userAddress() {\n      return this.$store.state.userAddress;\n    },\n  },\n};\n</script>\n","<template>\n  <div>\n    <FormLabel :count=\"count\" :required=\"required\">{{ title }}</FormLabel>\n    <input\n      type=\"text\"\n      class=\"text-2xl bg-transparent block border-b border-black w-full text-black py-3 outline-none placeholder-opb font-light\"\n      placeholder=\"Type your Answer here\"\n      required\n      v-model=\"sAmount\"\n      @keyup.enter=\"$emit('clicked')\"\n    />\n    <div class=\"flex mt-4 items-center\">\n      <button\n        @click=\"$emit('clicked')\"\n        class=\"flex border border-black hover:bg-black hover:text-white px-6 py-2 rounded-full\"\n      >\n        Ok\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          class=\"h-6 w-6 ml-1\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n          stroke-width=\"2\"\n        >\n          <path\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n            d=\"M5 13l4 4L19 7\"\n          />\n        </svg>\n      </button>\n      <span class=\"text-sm ml-4\">Press <b class=\"font-bold\">Enter ↵</b></span>\n    </div>\n  </div>\n</template>\n<script>\nimport FormLabel from \"@/components/Form/FormLabel.vue\";\nexport default {\n  components: {\n    FormLabel,\n  },\n  props: [\"count\", \"title\", \"required\", \"placeholder\"],\n};\n</script>\n","<template>\n  <label class=\"block text-xl md:text-2xl mb-4 flex items-center md:-ml-10\"\n    ><span class=\"text-sm mr-1\">{{ count }}</span>\n    <svg height=\"10\" width=\"11\" class=\"mr-4\">\n      <path\n        d=\"M7.586 5L4.293 1.707 5.707.293 10.414 5 5.707 9.707 4.293 8.293z\"\n      ></path>\n      <path d=\"M8 4v2H0V4z\"></path></svg\n    ><slot></slot><span v-if=\"required\">*</span></label\n  >\n</template>\n<script>\nexport default {\n  props: [\"count\", \"required\"],\n};\n</script>\n","import { render } from \"./FormLabel.vue?vue&type=template&id=505f098a\"\nimport script from \"./FormLabel.vue?vue&type=script&lang=js\"\nexport * from \"./FormLabel.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./InputText.vue?vue&type=template&id=836e3660\"\nimport script from \"./InputText.vue?vue&type=script&lang=js\"\nexport * from \"./InputText.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./FormKyc.vue?vue&type=template&id=d31c912e\"\nimport script from \"./FormKyc.vue?vue&type=script&lang=js\"\nexport * from \"./FormKyc.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"grid grid-cols-12\">\n    <div\n      class=\"col-span-12 sm:col-span-10 sm:col-start-2 lg:col-span-8 lg:col-start-3\"\n    >\n      <form v-on:submit.prevent=\"createProposal\" class=\"w-full\">\n        <label\n          class=\"block text-3xl md:text-4xl mb-4 flex items-center -ml-10 justify-center\"\n          ><span class=\"text-sm mr-1\">1</span>\n          <svg height=\"10\" width=\"11\" class=\"mr-4\">\n            <path\n              d=\"M7.586 5L4.293 1.707 5.707.293 10.414 5 5.707 9.707 4.293 8.293z\"\n            ></path>\n            <path d=\"M8 4v2H0V4z\"></path></svg\n          >Become a Member *</label\n        >\n        <span class=\"block text-lg lg:text-xl font-light opacity-75 mb-4\"\n          >The amount sent will be held in escrow pending a member vote. If the\n          proposal passes, the funds will be sent to the DAO. If the proposal\n          fails, the funds will be refunded to you.</span\n        >\n        <div class=\"grid grid-cols-12 gap-6\">\n          <div class=\"col-span-12 sm:col-span-6\">\n            <input\n              type=\"number\"\n              class=\"text-3xl bg-transparent block border-b border-black w-full text-black py-3 outline-none placeholder-black font-light\"\n              placeholder=\"$0.00\"\n              v-model=\"usdcAmount\"\n              required\n            />\n            <span\n              class=\"block text-xs md:text-base mt-3 lg:text-md font-light opacity-75 mb-4\"\n              >This is the amount of USDC tokens you are putting into escrow\n              pending a governance vote for membership.</span\n            >\n          </div>\n          <div class=\"col-span-12 sm:col-span-6\">\n            <input\n              type=\"number\"\n              class=\"text-3xl bg-transparent block border-b border-black w-full text-black py-3 outline-none placeholder-black font-light\"\n              placeholder=\"S0\"\n              required\n              v-model=\"sAmount\"\n            />\n            <span\n              class=\"block mt-3 text-xs md:text-base lg:text-md font-light opacity-75 mb-4\"\n              >This is the amount of DAO membership units you are requesting to\n              be authorized in exchange.</span\n            >\n          </div>\n        </div>\n\n        <button\n          type=\"submit\"\n          :disabled=\"processing\"\n          class=\"mx-auto mt-6 bg-black text-canary rounded px-4 py-3 text-xl shadow-sm op flex items-center w-64 justify-center\"\n        >\n          {{ btnTxt }}\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nexport default {\n  data() {\n    return {\n      btnTxt: \"Submit\",\n      processing: false,\n      usdcAmount: \"\",\n      sAmount: \"\",\n    };\n  },\n  methods: {\n    async initiate() {\n      this.processing = true;\n      var usdc = {\n        address: \"0x07865c6e87b9f70255377e024ace6630c1eaa37f\",\n        abi: [\n          {\n            inputs: [\n              { internalType: \"address\", name: \"to\", type: \"address\" },\n              { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n            ],\n            name: \"transfer\",\n            outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n            stateMutability: \"nonpayable\",\n            type: \"function\",\n          },\n        ],\n      };\n      let ethereum = window.ethereum;\n      let provider = new ethers.providers.Web3Provider(ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const usdcContract = new ethers.Contract(usdc.address, usdc.abi, signer);\n      var amt = ethers.utils\n        .parseUnits(Number(this.usdcAmount).toFixed(1), 6)\n        .toNumber();\n      try {\n        this.btnTxt = \"Processing...\";\n        let transfer = await usdcContract.transfer(this.walletAddress, 1);\n        console.log(transfer.hash, amt);\n        await this.createProposal();\n      } catch (err) {\n        this.btnTxt = \"Submit\";\n        this.processing = false;\n        console.log(err);\n      }\n    },\n    async createProposal() {\n      this.btnTxt = \"Processing...\";\n      this.processing = true;\n      console.log(\"Creating Proposal...\");\n      try {\n        const res = await axios.post(\n          \"https://salontest-terrifickid.cloud.okteto.net/onboard\",\n          {\n            profile: this.$store.state.profile,\n            usdc: this.usdcAmount,\n            s: this.sAmount,\n          }\n        );\n        if (res.data.result) {\n          this.$store.dispatch(\"connect\");\n        } else {\n          console.log(res.data);\n          this.btnTxt = \"ERROR A1: Contact Support\";\n        }\n      } catch (error) {\n        console.log(error);\n        this.btnTxt = \"ERROR A2: Contact Support\";\n      }\n    },\n  },\n  computed: {\n    walletAddress() {\n      return this.$store.state.walletAddress;\n    },\n  },\n};\n</script>\n","export const version = \"abi/5.6.3\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nexport class ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class ErrorDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let message = \"\";\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(errorArgs[0])}`;\n                    }\n                    else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${errorArgs[0]}`;\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) { }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","export const version = \"contracts/5.6.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        if (typeof (name) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n        }\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"value\",\n                    value\n                }));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.maxFeePerGas != null) {\n            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n        }\n        if (ro.maxPriorityFeePerGas != null) {\n            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Compute the intrinsic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        if (ro.customData) {\n            tx.customData = shallowCopy(ro.customData);\n        }\n        if (ro.ccipReadEnabled) {\n            tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n        }\n        // Remove the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        delete overrides.maxFeePerGas;\n        delete overrides.maxPriorityFeePerGas;\n        delete overrides.customData;\n        delete overrides.ccipReadEnabled;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction addContractWait(contract, tx) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations) => {\n        return wait(confirmations).then((receipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event = deepCopy(log);\n                let parsed = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                }\n                catch (e) { }\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data, topics) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n                // Useful operations\n                event.removeListener = () => { return contract.provider; };\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                };\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                };\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                };\n                return event;\n            });\n            return receipt;\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tx.wait so the receipt has extra properties\n            addContractWait(contract, tx);\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${name}`]) {\n                    uniqueNames[`%${name}`] = [];\n                }\n                uniqueNames[`%${name}`].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class Contract extends BaseContract {\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            // Add the modified wait that wraps events\n            addContractWait(contract, tx);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","export const version = \"units/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","import { render } from \"./FormApply.vue?vue&type=template&id=611a064c\"\nimport script from \"./FormApply.vue?vue&type=script&lang=js\"\nexport * from \"./FormApply.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"grid grid-cols-12\" v-if=\"'fields' in proposal\">\n    <div class=\"col-span-12\">\n      <form class=\"flex items-center\">\n        <div class=\"w-screen\">\n          <label\n            class=\"flex block text-3xl md:text-4xl mb-4 items-center justify-left\"\n            ><span class=\"text-sm mr-1\">1</span>\n            <svg height=\"10\" width=\"11\" class=\"mr-4\">\n              <path\n                class=\"fill-electric\"\n                d=\"M7.586 5L4.293 1.707 5.707.293 10.414 5 5.707 9.707 4.293 8.293z\"\n              ></path>\n              <path d=\"M8 4v2H0V4z\"></path></svg\n            >{{ proposal.fields.proposalType[\"en-US\"][0] }}<br />#{{\n              id\n            }}*</label\n          >\n          <ul class=\"flex\">\n            <li class=\"mr-4\">\n              <span class=\"text-xs\">vote start: </span\n              >{{ proposal.fields.startDate[\"en-US\"] }}\n            </li>\n            <li>\n              <span class=\"text-xs\">vote end: </span\n              >{{ proposal.fields.endDate[\"en-US\"] }}\n            </li>\n          </ul>\n          <div class=\"grid grid-cols-12\">\n            <div class=\"col-span-6\">\n              <p class=\"text-2xl my-4\">\n                {{ proposal.fields.meta[\"en-US\"].usdc }} for\n                {{ proposal.fields.meta[\"en-US\"].s }} Salon units\n              </p>\n\n              <p class=\"text-2xl my-4\">\n                {{ proposal.fields.meta[\"en-US\"].profile.firstName[\"en-US\"]\n                }}<br />\n                {{ proposal.fields.meta[\"en-US\"].profile.lastName[\"en-US\"]\n                }}<br />\n              </p>\n              <p class=\"text-sm mt-12\">\n                {{ proposal.fields.meta[\"en-US\"].profile.walletAddress[\"en-US\"]\n                }}<br />\n                {{\n                  proposal.fields.meta[\"en-US\"].profile.emailAddress[\"en-US\"]\n                }}\n              </p>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  components: {},\n  props: [\"id\"],\n  data() {\n    return {\n      proposal: {},\n    };\n  },\n  async beforeMount() {\n    console.log(\"loading proposal!\");\n    try {\n      const res = await axios.get(\n        \"https://salontest-terrifickid.cloud.okteto.net/entry/\" + this.id\n      );\n      this.proposal = res.data;\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  },\n};\n</script>\n","import { render } from \"./FormProposal.vue?vue&type=template&id=1a86c8dc\"\nimport script from \"./FormProposal.vue?vue&type=script&lang=js\"\nexport * from \"./FormProposal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ViewJoin.vue?vue&type=template&id=072178a6\"\nimport script from \"./ViewJoin.vue?vue&type=script&lang=js\"\nexport * from \"./ViewJoin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","script","__exports__","render","salonClass","colors","ready","walletAddress","textClass","backgroundClass","fillClass","href","color","version","id","xmlns","x","y","viewBox","style","d","props","computed","display","this","length","components","AppLogo","connect","AppFooter","AppHeader","methods","$store","dispatch","AppLoader","WalletConnect","profile","state","connecting","isLoaded","mounted","console","log","background","disconnect","isKycApproved","isNew","isApplied","isMember","onboard","sys","firstName","ref","options","count","title","required","next","fill","stroke","type","placeholder","$emit","sAmount","height","width","FormLabel","InputText","data","btnTxt","sending","licenseKey","controlArrows","scrollBar","scrollingSpeed","navigation","navigationPosition","$refs","fullpage","api","moveSectionDown","async","res","userAddress","legalNameOfPerson","error","createProposal","usdcAmount","disabled","processing","logger","checkResultErrors","result","errors","checkErrors","path","object","Array","isArray","key","childPath","slice","push","Coder","constructor","name","localName","dynamic","_throwError","message","value","throwArgumentError","Writer","wordSize","_data","_dataLength","_padding","Uint8Array","_writeData","appendWriter","writer","writeBytes","bytes","paddingOffset","_getValue","throwError","offset","writeValue","writeUpdatableValue","Reader","coerceFunc","allowLoose","_offset","consumed","static","match","parseInt","toNumber","coerce","_coerceFunc","_peekBytes","loose","alignedLength","Math","ceil","subReader","readBytes","readValue","AddressCoder","super","defaultValue","encode","decode","reader","toHexString","AnonymousCoder","coder","undefined","pack","coders","values","arrayValues","unique","map","argument","staticWriter","dynamicWriter","updateFuncs","forEach","index","dynamicOffset","updateFunc","baseOffset","func","unpack","baseReader","offsetReader","code","baseType","uniqueNames","reduce","accum","Error","Object","defineProperty","enumerable","get","i","freeze","ArrayCoder","defaultChild","checkArgumentCount","BooleanCoder","isZero","DynamicBytesCoder","BytesCoder","FixedBytesCoder","size","String","substring","NullCoder","NumberCoder","signed","v","maxUintValue","bounds","mask","gt","lt","add","mul","toTwos","fromTwos","StringCoder","TupleCoder","types","join","_constructorGuard","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","indexOf","parseParamType","param","allowIndexed","originalParam","newNode","parent","node","allowType","indexed","replace","c","allowParams","verifyType","child","allowName","allowArray","sibling","readArray","populate","params","FormatTypes","sighash","minimal","full","json","paramTypeArray","RegExp","ParamType","constructorGuard","operation","arrayLength","arrayChildren","fromObject","_isParamType","format","comp","JSON","parse","stringify","fromString","isParamType","ParamTypify","parseParams","allowIndex","splitNesting","Fragment","_isFragment","isFragment","FunctionFragment","EventFragment","ConstructorFragment","ErrorFragment","trim","split","anonymous","inputs","input","isEventFragment","verifyIdentifier","regexParen","modifier","warn","parseGas","gas","comps","parseModifiers","constant","payable","stateMutability","verifyState","isConstructorFragment","parens","outputs","output","toString","isFunctionFragment","returns","checkForbidden","fragment","sig","isErrorFragment","regexIdentifier","depth","paramTypeBytes","paramTypeNumber","AbiCoder","_getCoder","component","_getWordSize","_getReader","_getWriter","getDefaultValue","from","defaultAbiCoder","LogDescription","TransactionDescription","ErrorDescription","Indexed","_isIndexed","BuiltinErrors","signature","reason","wrapAccessError","property","wrap","Interface","fragments","abi","filter","bucket","deploy","functions","events","j","address","eventFragment","getFunction","nameOrSignatureOrSighash","getSighash","matching","keys","f","getEvent","nameOrSignatureOrTopic","topichash","toLowerCase","getEventTopic","getError","_","_decodeParams","_abiCoder","_encodeParams","encodeDeploy","decodeErrorResult","encodeErrorResult","decodeFunctionData","functionFragment","encodeFunctionData","decodeFunctionResult","errorArgs","errorName","errorSignature","selector","builtin","method","encodeFunctionResult","encodeFilterTopics","topics","encodeTopic","pop","encodeEventLog","dataTypes","dataValues","decodeEventLog","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","hash","parseTransaction","tx","args","parseLog","topic","parseError","hexData","errorFragment","_isInterface","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","e","rejected","done","then","apply","resolveName","resolver","nameOrPromise","resolveAddresses","paramType","all","makeError","populateTransaction","contract","overrides","signer","override","getAddress","check","provider","resolved","resolvedAddress","interface","to","ro","nonce","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","accessList","intrinsic","roValue","customData","ccipReadEnabled","leftovers","l","buildPopulate","buildEstimate","signerOrProvider","estimateGas","addContractWait","wait","bind","confirmations","receipt","logs","event","parsed","eventSignature","removeListener","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildCall","collapseSimple","blockTag","deployTransaction","_deployed","call","transaction","buildSend","txRequest","sendTransaction","buildDefault","getEventTag","RunningEvent","tag","_listeners","addListener","listener","once","item","removeAllListeners","listeners","listenerCount","run","argsCopy","setTimeout","prepareEvent","getEmit","ErrorRunningEvent","FragmentRunningEvent","contractInterface","decodeError","WildcardRunningEvent","BaseContract","addressOrName","uniqueFilters","filters","catch","uniqueSignatures","callStatic","signatures","isInterface","deployed","_deployedPromise","getCode","contractAddress","fallback","attach","isIndexed","_normalizeRunningEvent","runningEvent","_runningEvents","_getRunningEvent","eventName","_checkRunningEvents","emit","_wrappedEmits","off","_wrapEvent","_addEventListener","wrappedEmit","on","queryFilter","fromBlockOrBlockhash","toBlock","fromBlock","getLogs","Contract","Zero","NegativeOne","throwFault","fault","zeros","getMultiplier","decimals","multiplier","negative","fraction","mod","whole","div","parseFixed","wholeValue","fractionValue","wei","FixedFormat","_multiplier","FixedNumber","hex","_hex","_value","_isFixedNumber","_checkFormat","other","addUnsafe","a","b","fromValue","subUnsafe","sub","mulUnsafe","divUnsafe","floor","hasFraction","isNegative","ONE","toFormat","ceiling","round","factor","bump","BUMP","toUnsafeFloat","parseFloat","fixedFormat","numeric","decimal","fromBytes","names","parseUnits","unitName","usdc","internalType","ethereum","window","send","getSigner","usdcContract","amt","Number","toFixed","transfer","err","s","proposal","fields","proposalType","startDate","endDate","meta","lastName","emailAddress","AppShell","FormKyc","FormApply","AppContent","FormProposal","loaded","approved","salonUnits"],"sourceRoot":""}