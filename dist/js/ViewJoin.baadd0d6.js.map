{"version":3,"file":"js/ViewJoin.baadd0d6.js","mappings":"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","sources":["webpack://oz.salon.dapp/./src/components/AppContent.vue","webpack://oz.salon.dapp/./src/components/AppContent.vue?64bb","webpack://oz.salon.dapp/./src/components/AppFooter.vue","webpack://oz.salon.dapp/./src/components/AppFooter.vue?f367","webpack://oz.salon.dapp/./src/components/AppLogo.vue","webpack://oz.salon.dapp/./src/components/AppLogo.vue?d041","webpack://oz.salon.dapp/./src/components/AppShell.vue","webpack://oz.salon.dapp/./src/components/WalletConnect.vue","webpack://oz.salon.dapp/./src/components/WalletConnect.vue?2bfb","webpack://oz.salon.dapp/./src/components/AppShell.vue?e99e","webpack://oz.salon.dapp/./src/views/ViewJoin.vue","webpack://oz.salon.dapp/./src/components/FormKyc.vue","webpack://oz.salon.dapp/./src/components/FormKyc.vue?e903","webpack://oz.salon.dapp/./src/components/FormApply.vue","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/_version.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/abstract-coder.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/address.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/anonymous.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/array.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/boolean.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/bytes.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/fixed-bytes.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/null.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/number.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/string.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/coders/tuple.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/fragments.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/abi-coder.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/abi/lib.esm/interface.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/contracts/lib.esm/_version.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/contracts/lib.esm/index.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/bignumber/lib.esm/fixednumber.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/units/lib.esm/_version.js","webpack://oz.salon.dapp/./node_modules/@ethersproject/units/lib.esm/index.js","webpack://oz.salon.dapp/./src/components/FormApply.vue?1bfd","webpack://oz.salon.dapp/./src/components/FormProposal.vue","webpack://oz.salon.dapp/./src/components/FormProposal.vue?f90f","webpack://oz.salon.dapp/./src/views/ViewJoin.vue?e8a4"],"sourcesContent":["<template>\n  <div class=\"h-screen flex px-3 overflow-scroll\">\n    <slot></slot>\n  </div>\n</template>\n","import { render } from \"./AppContent.vue?vue&type=template&id=612e4a04\"\nconst script = {}\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"fixed left-0 right-0 bottom-0 p-3 z-10\" :class=\"backgroundClass\">\n    <div class=\"grid grid-cols-10\">\n      <div\n        class=\"col-start-7 col-span-4 sm:col-start-8 sm:col-span-3 lg:col-start-9 lg:col-span-2\"\n      >\n        <a href=\"/#/\"><AppLogo :color=\"'fill-' + colors[1]\" /></a>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport AppLogo from \"@/components/AppLogo.vue\";\nexport default {\n  props: [\"colors\"],\n  components: {\n    AppLogo,\n  },\n};\n</script>\n","import { render } from \"./AppFooter.vue?vue&type=template&id=29eee686\"\nimport script from \"./AppFooter.vue?vue&type=script&lang=js\"\nexport * from \"./AppFooter.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <svg\n    version=\"1.1\"\n    id=\"Layer_1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n    x=\"0px\"\n    y=\"0px\"\n    viewBox=\"0 0 5368 1509\"\n    style=\"enable-background: new 0 0 5368 1509\"\n    xml:space=\"preserve\"\n  >\n    <path\n      :class=\"color\"\n      d=\"M4965.8,2.15c-135.62,0-185.13,73.19-275.54,73.19C4597.7,75.34,4571.86,0,4470.69,0\n    C4340.08,0,4231,126.35,4149.1,299.13C4066.8,122.58,3883.31,2.15,3631.16,2.15c-199.69,0-357.73,75.53-456.34,194.65\n    c-33.52-125.01-141.1-179.58-260.48-179.58c-190.55,0-367.91,139.88-460.47,389.02C2348.23,136.26,2102.72,2.15,1805.72,2.15\n    c-256.16,0-467.12,88.26-467.12,238.94c0,68.88,43.05,116.24,107.63,116.24c36.59,0,86.11-15.07,157.14-15.07\n    s157.14,15.07,157.14,94.72c0,86.11-96.87,118.4-202.35,157.14c-149.98,56.4-261.78,128.84-326.79,228.21\n    c-31.44-43.56-74.56-85.62-131.72-127.04L944.67,583.37c-62.43-45.21-88.26-88.26-88.26-133.46c0-55.97,40.9-83.95,92.56-83.95\n    c103.33,0,114.09,111.94,226.03,111.94c86.11,0,131.31-64.58,131.31-135.62c0-189.43-327.2-340.12-645.79-340.12\n    c-327.2,0-538.16,137.77-538.16,378.86c0,142.07,73.19,262.62,266.93,402.54l245.4,176.52c45.21,32.29,77.5,73.19,77.5,120.55\n    c0,53.82-43.05,88.26-94.72,88.26c-148.53,0-127.01-282-370.25-282c-146.38,0-243.25,101.17-243.25,238.94\n    c0,223.87,256.16,383.17,650.1,383.17c290.66,0,476.19-88.06,571.12-218.3c80.42,137.72,239.92,218.3,457.84,218.3\n    c154.99,0,249.71-40.9,342.27-40.9c88.26,0,96.87,40.9,161.45,40.9c59.85,0,198.48-36.11,273.14-313.48\n    c113.21,232.65,353.84,313.48,691.24,313.48c363.8,0,628.57-86.11,628.57-288.45c0-81.13-42.36-144.37-102.17-177.91\n    c121-7.34,224.54-43.44,306.63-100.4c-2.83,35.94-4.27,70.1-4.27,101.79c0,297.06,107.63,464.97,307.83,464.97\n    c200.2,0,290.61-161.45,258.32-514.48l-15.07-165.75c-25.83-294.91,30.14-436.99,165.75-436.99c92.56,0,129.16,66.73,129.16,157.14\n    c0,223.87-226.03,460.66-226.03,708.22c0,152.84,101.17,251.86,241.1,251.86c262.62,0,523.09-361.64,523.09-891.19\n    C5364.04,107.63,5127.25,2.15,4965.8,2.15z M1812.18,1078.47c-62.43,0-116.24-45.21-116.24-131.31\n    c0-105.48,73.19-180.82,161.45-180.82c83.95,0,116.24,66.73,116.24,127.01C1973.63,994.52,1893.98,1078.47,1812.18,1078.47z\n     M3129.6,1134.44c-103.33,0-157.14-49.51-157.14-165.75c0-114.22,49.59-220.93,100.92-328.09\n    c42.95,193.82,192.96,344.52,415.18,389.57C3379.68,1061.57,3257.95,1134.44,3129.6,1134.44z M3631.16,654.4\n    c-75.34,0-127.01-62.43-127.01-152.84s51.66-150.68,127.01-150.68s122.7,60.27,122.7,150.68S3706.5,654.4,3631.16,654.4z\"\n    />\n  </svg>\n</template>\n<script>\nexport default {\n  props: [\"color\"],\n};\n</script>\n","import { render } from \"./AppLogo.vue?vue&type=template&id=337d5780\"\nimport script from \"./AppLogo.vue?vue&type=script&lang=js\"\nexport * from \"./AppLogo.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div\n    :class=\"{ ['bg-' + colors[0]]: true, ['text-' + colors[1]]: true }\"\n    class=\"min-h-screen fix\"\n  >\n    <div v-if=\"walletAddress\">\n      <AppHeader :colors=\"colors\" />\n\n      <slot v-if=\"ready\"></slot>\n\n      <AppFooter :colors=\"colors\" />\n    </div>\n    <div v-if=\"!walletAddress\">\n      <WalletConnect\n        :textClass=\"'text-black'\"\n        :backgroundClass=\"'bg-tope'\"\n        :fillClass=\"'fill-black'\"\n        class=\"fixed h-full\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\n// @ is an alias to /src\n\nimport AppFooter from \"@/components/AppFooter.vue\";\nimport AppHeader from \"@/components/AppHeader.vue\";\nimport WalletConnect from \"@/components/WalletConnect.vue\";\nexport default {\n  props: [\"colors\"],\n  components: { AppFooter, AppHeader, WalletConnect },\n  computed: {\n    profile() {\n      return this.$store.state.profile;\n    },\n    walletAddress() {\n      return this.$store.state.walletAddress;\n    },\n    connecting() {\n      return this.$store.state.connecting;\n    },\n    ready() {\n      return this.walletAddress && !(\"loading\" in this.profile);\n    },\n  },\n  methods: {\n    mounted() {\n      console.log(this.background);\n    },\n    connect() {\n      this.$store.dispatch(\"connect\");\n    },\n    disconnect() {\n      this.$store.dispatch(\"disconnect\");\n    },\n  },\n};\n</script>\n","<template>\n  <div\n    class=\"flex w-full items-center justify-center\"\n    :class=\"{ [textClass]: true, [backgroundClass]: true }\"\n  >\n    <AppHeader :backgroundClass=\"backgroundClass\" :textClass=\"textClass\" />\n    <button\n      class=\"bg-electric text-silver rounded px-8 py-6 text-2xl shadow-sm op flex items-center\"\n      @click=\"connect\"\n    >\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        class=\"w-48 h-48 relative left-20 bottom-20\"\n        viewBox=\"0 0 212 189\"\n      >\n        <g fill=\"none\" fill-rule=\"evenodd\">\n          <polygon\n            fill=\"#CDBDB2\"\n            points=\"60.75 173.25 88.313 180.563 88.313 171 90.563 168.75 106.313 168.75 106.313 180 106.313 187.875 89.438 187.875 68.625 178.875\"\n          />\n          <polygon\n            fill=\"#CDBDB2\"\n            points=\"105.75 173.25 132.75 180.563 132.75 171 135 168.75 150.75 168.75 150.75 180 150.75 187.875 133.875 187.875 113.063 178.875\"\n            transform=\"matrix(-1 0 0 1 256.5 0)\"\n          />\n          <polygon\n            fill=\"#393939\"\n            points=\"90.563 152.438 88.313 171 91.125 168.75 120.375 168.75 123.75 171 121.5 152.438 117 149.625 94.5 150.188\"\n          />\n          <polygon\n            fill=\"#F89C35\"\n            points=\"75.375 27 88.875 58.5 95.063 150.188 117 150.188 123.75 58.5 136.125 27\"\n          />\n          <polygon\n            fill=\"#F89D35\"\n            points=\"16.313 96.188 .563 141.75 39.938 139.5 65.25 139.5 65.25 119.813 64.125 79.313 58.5 83.813\"\n          />\n          <polygon\n            fill=\"#D87C30\"\n            points=\"46.125 101.25 92.25 102.375 87.188 126 65.25 120.375\"\n          />\n          <polygon\n            fill=\"#EA8D3A\"\n            points=\"46.125 101.813 65.25 119.813 65.25 137.813\"\n          />\n          <polygon\n            fill=\"#F89D35\"\n            points=\"65.25 120.375 87.75 126 95.063 150.188 90 153 65.25 138.375\"\n          />\n          <polygon\n            fill=\"#EB8F35\"\n            points=\"65.25 138.375 60.75 173.25 90.563 152.438\"\n          />\n          <polygon\n            fill=\"#EA8E3A\"\n            points=\"92.25 102.375 95.063 150.188 86.625 125.719\"\n          />\n          <polygon\n            fill=\"#D87C30\"\n            points=\"39.375 138.938 65.25 138.375 60.75 173.25\"\n          />\n          <polygon\n            fill=\"#EB8F35\"\n            points=\"12.938 188.438 60.75 173.25 39.375 138.938 .563 141.75\"\n          />\n          <polygon\n            fill=\"#E8821E\"\n            points=\"88.875 58.5 64.688 78.75 46.125 101.25 92.25 102.938\"\n          />\n          <polygon\n            fill=\"#DFCEC3\"\n            points=\"60.75 173.25 90.563 152.438 88.313 170.438 88.313 180.563 68.063 176.625\"\n          />\n          <polygon\n            fill=\"#DFCEC3\"\n            points=\"121.5 173.25 150.75 152.438 148.5 170.438 148.5 180.563 128.25 176.625\"\n            transform=\"matrix(-1 0 0 1 272.25 0)\"\n          />\n          <polygon\n            fill=\"#393939\"\n            points=\"70.313 112.5 64.125 125.438 86.063 119.813\"\n            transform=\"matrix(-1 0 0 1 150.188 0)\"\n          />\n          <polygon fill=\"#E88F35\" points=\"12.375 .563 88.875 58.5 75.938 27\" />\n          <path\n            fill=\"#8E5A30\"\n            d=\"M12.3750002,0.562500008 L2.25000003,31.5000005 L7.87500012,65.250001 L3.93750006,67.500001 L9.56250014,72.5625 L5.06250008,76.5000011 L11.25,82.1250012 L7.31250011,85.5000013 L16.3125002,96.7500014 L58.5000009,83.8125012 C79.1250012,67.3125004 89.2500013,58.8750003 88.8750013,58.5000009 C88.5000013,58.1250009 63.0000009,38.8125006 12.3750002,0.562500008 Z\"\n          />\n          <g transform=\"matrix(-1 0 0 1 211.5 0)\">\n            <polygon\n              fill=\"#F89D35\"\n              points=\"16.313 96.188 .563 141.75 39.938 139.5 65.25 139.5 65.25 119.813 64.125 79.313 58.5 83.813\"\n            />\n            <polygon\n              fill=\"#D87C30\"\n              points=\"46.125 101.25 92.25 102.375 87.188 126 65.25 120.375\"\n            />\n            <polygon\n              fill=\"#EA8D3A\"\n              points=\"46.125 101.813 65.25 119.813 65.25 137.813\"\n            />\n            <polygon\n              fill=\"#F89D35\"\n              points=\"65.25 120.375 87.75 126 95.063 150.188 90 153 65.25 138.375\"\n            />\n            <polygon\n              fill=\"#EB8F35\"\n              points=\"65.25 138.375 60.75 173.25 90 153\"\n            />\n            <polygon\n              fill=\"#EA8E3A\"\n              points=\"92.25 102.375 95.063 150.188 86.625 125.719\"\n            />\n            <polygon\n              fill=\"#D87C30\"\n              points=\"39.375 138.938 65.25 138.375 60.75 173.25\"\n            />\n            <polygon\n              fill=\"#EB8F35\"\n              points=\"12.938 188.438 60.75 173.25 39.375 138.938 .563 141.75\"\n            />\n            <polygon\n              fill=\"#E8821E\"\n              points=\"88.875 58.5 64.688 78.75 46.125 101.25 92.25 102.938\"\n            />\n            <polygon\n              fill=\"#393939\"\n              points=\"70.313 112.5 64.125 125.438 86.063 119.813\"\n              transform=\"matrix(-1 0 0 1 150.188 0)\"\n            />\n            <polygon\n              fill=\"#E88F35\"\n              points=\"12.375 .563 88.875 58.5 75.938 27\"\n            />\n            <path\n              fill=\"#8E5A30\"\n              d=\"M12.3750002,0.562500008 L2.25000003,31.5000005 L7.87500012,65.250001 L3.93750006,67.500001 L9.56250014,72.5625 L5.06250008,76.5000011 L11.25,82.1250012 L7.31250011,85.5000013 L16.3125002,96.7500014 L58.5000009,83.8125012 C79.1250012,67.3125004 89.2500013,58.8750003 88.8750013,58.5000009 C88.5000013,58.1250009 63.0000009,38.8125006 12.3750002,0.562500008 Z\"\n            />\n          </g>\n        </g>\n      </svg>\n    </button>\n    <AppFooter :backgroundClass=\"backgroundClass\" :fillClass=\"fillClass\" />\n  </div>\n</template>\n<script>\nimport AppHeader from \"@/components/AppHeader.vue\";\nimport AppFooter from \"@/components/AppFooter.vue\";\nexport default {\n  props: [\"backgroundClass\", \"textClass\", \"fillClass\"],\n  components: {\n    AppFooter,\n    AppHeader,\n  },\n  methods: {\n    connect() {\n      this.$store.dispatch(\"connect\");\n    },\n  },\n};\n</script>\n<style>\n.op:hover {\n  opacity: 0.85;\n}\n</style>\n","import { render } from \"./WalletConnect.vue?vue&type=template&id=10a4f958\"\nimport script from \"./WalletConnect.vue?vue&type=script&lang=js\"\nexport * from \"./WalletConnect.vue?vue&type=script&lang=js\"\n\nimport \"./WalletConnect.vue?vue&type=style&index=0&id=10a4f958&lang=css\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./AppShell.vue?vue&type=template&id=58e15a63\"\nimport script from \"./AppShell.vue?vue&type=script&lang=js\"\nexport * from \"./AppShell.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <AppShell :colors=\"['canary', 'electric']\">\n    <template v-if=\"isNew\"><FormKyc /></template>\n    <template v-if=\"!isKycApproved && !isNew\">\n      <AppContent class=\"items-center justify-center\">\n        <h1 class=\"text-4xl text-center font-light\">\n          Your KYC application<br />is being reviewed.\n        </h1></AppContent\n      >\n    </template>\n    <template v-if=\"isKycApproved && !isApplied\">\n      <AppContent class=\"items-center justify-center\"><FormApply /></AppContent\n    ></template>\n    <template v-if=\"isApplied && !isMember\"\n      ><AppContent class=\"items-center justify-center\"\n        ><FormProposal :id=\"profile.onboard['en-US'].sys.id\" /></AppContent\n    ></template>\n    <template v-if=\"isMember\"\n      ><AppContent class=\"pt-24\">\n        <div class=\"grid grid-cols-12 w-full\">\n          <div class=\"col-span-10 col-start-2\">\n            <p class=\"text-5xl\">\n              Hello,<br />{{ this.profile.firstName[\"en-US\"] }}\n            </p>\n          </div>\n        </div>\n      </AppContent></template\n    >\n  </AppShell>\n</template>\n\n<script>\n// @ is an alias to /src\nimport AppShell from \"@/components/AppShell.vue\";\nimport FormKyc from \"@/components/FormKyc\";\nimport FormApply from \"@/components/FormApply.vue\";\nimport FormProposal from \"@/components/FormProposal.vue\";\nimport AppContent from \"@/components/AppContent.vue\";\nexport default {\n  name: \"DappHome\",\n  components: { AppShell, FormKyc, FormApply, AppContent, FormProposal },\n  computed: {\n    isNew() {\n      if (\"approved\" in this.profile) return false;\n      return true;\n    },\n    isKycApproved() {\n      if (this.profile.approved) return this.profile.approved[\"en-US\"];\n      return false;\n    },\n    isApplied() {\n      if (\"onboard\" in this.profile) {\n        if (this.profile.onboard[\"en-US\"]) return true;\n      }\n      return false;\n    },\n    isMember() {\n      if (\"salonUnits\" in this.profile) {\n        return this.profile.salonUnits[\"en-US\"];\n      }\n      return false;\n    },\n    profile() {\n      return this.$store.state.profile;\n    },\n  },\n};\n</script>\n","<template>\n  <form className=\"form lowercase\" v-on:submit.prevent=\"submitForm\">\n    <h1>kyc verification</h1>\n\n    <label\n      htmlFor=\"type_of_entity\"\n      className=\"formbuilder-radio-group-label form__input-row-label\"\n    >\n      Type of Entity\n    </label>\n\n    <input\n      name=\"type_of_entity\"\n      id=\"type_of_entity-0\"\n      aria-=\"true\"\n      value=\"person\"\n      type=\"radio\"\n    />\n    <span htmlFor=\"type_of_entity-0\"> Person</span>\n\n    <p>\n      <input\n        name=\"type_of_entity\"\n        id=\"type_of_entity-1\"\n        aria-=\"true\"\n        value=\"company\"\n        type=\"radio\"\n      />\n      <span htmlFor=\"type_of_entity-1\"> Company</span>\n    </p>\n    <p>\n      <input\n        name=\"type_of_entity\"\n        id=\"type_of_entity-2\"\n        aria-=\"true\"\n        value=\"trust\"\n        type=\"radio\"\n      />\n      <span htmlFor=\"type_of_entity-2\"> Trust</span>\n    </p>\n    <label\n      htmlFor=\"walletAddress\"\n      className=\"formbuilder-text-label form__input-row-label\"\n    >\n      Wallet Address\n    </label>\n    <input\n      type=\"text\"\n      name=\"walletAddress\"\n      id=\"walletAddress\"\n      aria-=\"true\"\n      :value=\"userAddress\"\n    />\n\n    <label\n      htmlFor=\"legal_name_of_person\"\n      className=\"formbuilder-text-label form__input-row-label\"\n    >\n      Legal Name of Person\n    </label>\n    <input\n      type=\"text\"\n      name=\"legalNameOfPerson\"\n      id=\"legalNameOfPerson\"\n      aria-=\"true\"\n      v-model=\"legalNameOfPerson\"\n    />\n\n    <label\n      htmlFor=\"email_address\"\n      className=\"formbuilder-text-label form__input-row-label\"\n    >\n      Email Address\n    </label>\n    <input type=\"text\" name=\"email_address\" id=\"email_address\" aria-=\"true\" />\n\n    <label\n      htmlFor=\"text-1650421756581\"\n      className=\"formbuilder-text-label form__input-row-label\"\n    >\n      Home Address\n    </label>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      name=\"text-1650421756581\"\n      id=\"text-1650421756581\"\n      aria-=\"true\"\n    />\n\n    <label\n      htmlFor=\"text-1650421756581\"\n      className=\"formbuilder-text-label form__input-row-label\"\n    >\n      Date of Birth\n    </label>\n\n    <select\n      className=\"form-control\"\n      name=\"DOB_month\"\n      id=\"select-1650421785515\"\n      aria-=\"true\"\n    >\n      <option value=\"01\" id=\"select-1650421785515-0\">01</option>\n      <option value=\"02\" id=\"select-1650421785515-1\">02</option>\n      <option value=\"03\" id=\"select-1650421785515-2\">03</option>\n    </select>\n\n    <select name=\"DOB_day\" id=\"day\" aria-=\"true\">\n      <option value=\"01\" id=\"day-0\">01</option>\n      <option value=\"02\" id=\"day-1\">02</option>\n      <option value=\"03\" id=\"day-2\">03</option>\n    </select>\n\n    <select name=\"DOB_year\" id=\"year\" aria-=\"true\">\n      <option value=\"2000\" id=\"year-0\">2000</option>\n      <option value=\"2001\" id=\"year-1\">2001</option>\n      <option value=\"2003\" id=\"year-2\">2003</option>\n    </select>\n\n    <p>\n      <label htmlFor=\"id_scan\" className=\"formbuilder-file-label\">\n        ID Scan\n      </label>\n    </p>\n    <p>\n      A passport is highly recommended but other forms of government–issued\n      color photo ID (such as a national identity card or driver’s license) are\n      also acceptable.\n    </p>\n    <p>\n      <input type=\"file\" name=\"id_scan\" id=\"id_scan\" aria-=\"true\" />\n    </p>\n\n    <p>\n      <label\n        htmlFor=\"back_of_id_scan\"\n        className=\"formbuilder-file-label form__input-row-label\"\n      >\n        Back of ID Scan (Optional)\n      </label>\n    </p>\n    <p>Not if you uploaded a passport above.</p>\n    <p>\n      <input type=\"file\" name=\"back_of_id_scan\" id=\"back_of_id_scan\" />\n    </p>\n\n    <label\n      htmlFor=\"passport_or_id_number\"\n      className=\"formbuilder-text-label form__input-row-label\"\n    >\n      Passport or ID Number\n    </label>\n    <input\n      type=\"text\"\n      name=\"passport_or_id_number\"\n      id=\"passport_or_id_number\"\n      aria-=\"true\"\n    />\n\n    <label\n      htmlFor=\"Phone-Number\"\n      className=\"formbuilder-text-label form__input-row-label\"\n    >\n      Phone Number\n    </label>\n    <input type=\"text\" name=\"Phone-Number\" id=\"Phone-Number\" aria-=\"true\" />\n\n    <label\n      htmlFor=\"occupation\"\n      className=\"formbuilder-text-label form__input-row-label\"\n    >\n      Occupation\n    </label>\n    <input\n      type=\"text\"\n      className=\"form-control\"\n      name=\"occupation\"\n      id=\"occupation\"\n      aria-=\"true\"\n    />\n\n    <h3>How are you accredited?</h3>\n\n    <label\n      htmlFor=\"basis_of_accreditation\"\n      className=\"formbuilder-radio-group-label form__input-row-label\"\n    >\n      Basis of Accreditation\n    </label>\n\n    <input\n      name=\"basis_of_accreditation\"\n      id=\"basis_of_accreditation-0\"\n      aria-=\"true\"\n      value=\"income\"\n      type=\"radio\"\n    />\n    <label htmlFor=\"basis_of_accreditation-0\">\n      Income of $200k ($300K with spouse) in each of the last 2 years\n    </label>\n\n    <input\n      name=\"basis_of_accreditation\"\n      id=\"basis_of_accreditation-1\"\n      aria-=\"true\"\n      value=\"net-worth\"\n      type=\"radio\"\n    />\n    <label htmlFor=\"basis_of_accreditation-1\"> Net worth over $1M </label>\n\n    <h3>Your income in the most recent tax year</h3>\n\n    <label\n      htmlFor=\"income_recent\"\n      className=\"formbuilder-text-label form__input-row-label\"\n    >\n      Income\n    </label>\n    <input type=\"text\" name=\"income_recent\" id=\"income_recent\" aria-=\"true\" />\n\n    <p>\n      <label\n        htmlFor=\"income_recent_documentation\"\n        className=\"formbuilder-file-label form__input-row-label\"\n      >\n        Documentation\n      </label>\n    </p>\n    <p>\n      Government tax filings, pay stubs, or a letter from your attorney,\n      accountant, or investment advisor written in the last 90 days (upload pdf,\n      docx).\n    </p>\n    <p>\n      <input\n        type=\"file\"\n        name=\"income_recent_documentation\"\n        id=\"income_recent_documentation\"\n        aria-=\"true\"\n      />\n    </p>\n\n    <h3>Your income in the previous tax year</h3>\n\n    <label\n      htmlFor=\"income_last\"\n      className=\"formbuilder-text-label form__input-row-label\"\n    >\n      Income\n    </label>\n    <input type=\"text\" name=\"income_last\" id=\"income_last\" aria-=\"true\" />\n\n    <p>\n      <label\n        htmlFor=\"income_last_documentation\"\n        className=\"formbuilder-file-label form__input-row-label\"\n      >\n        Documenation\n      </label>\n    </p>\n    <p>\n      Government tax filings, pay stubs, or a letter from your attorney,\n      accountant, or investment advisor written in the last 90 days (upload pdf,\n      docx).\n    </p>\n    <p>\n      <input\n        type=\"file\"\n        name=\"income_last_documentation\"\n        id=\"income_last_documentation\"\n        aria-=\"true\"\n      />\n    </p>\n\n    <label\n      htmlFor=\"current_year_income\"\n      className=\"formbuilder-checkbox-group-label form__input-row-label\"\n    >\n      Current Year Income\n    </label>\n\n    <input\n      name=\"current_year_income[]\"\n      id=\"current_year_income-0\"\n      aria-=\"true\"\n      value=\"true\"\n      type=\"checkbox\"\n    />\n    <label htmlFor=\"current_year_income-0\">\n      I expect to earn an income of at least $200k ($300k with spouse) again\n      this year.{\" \"}\n    </label>\n\n    <button\n      class=\"bg-black p-3 text-white mt-4\"\n      :disabled=\"sending\"\n      type=\"submit\"\n    >\n      {{ btnTxt }}\n    </button>\n  </form>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      legalNameOfPerson: \"\",\n      btnTxt: \"Submit\",\n      sending: false,\n    };\n  },\n  methods: {\n    async submitForm() {\n      this.sending = true;\n      this.btnTxt = \"Sending...\";\n      console.log(\"Ran Submit!\");\n      try {\n        const res = await axios.post(\n          \"https://salontest-terrifickid.cloud.okteto.net/onboard\",\n          {\n            walletAddress: this.userAddress,\n            legalNameOfPerson: this.legalNameOfPerson,\n          }\n        );\n        console.log(\"success\", res.data);\n        this.$store.dispatch(\"connect\");\n      } catch (error) {\n        console.log(\"error\", error);\n        this.btnTxt = \"error!\";\n      }\n    },\n  },\n  computed: {\n    userAddress() {\n      return this.$store.state.userAddress;\n    },\n  },\n};\n</script>\n<style scoped>\nlabel {\n  margin: 1.5rem 0 0.25rem 0;\n  display: block;\n  font-weight: 1000;\n}\ninput[type=\"text\"] {\n  border: 1px solid #eee;\n  padding: 1rem;\n  display: block;\n  width: 100%;\n}\n</style>\n","import { render } from \"./FormKyc.vue?vue&type=template&id=768c9397&scoped=true\"\nimport script from \"./FormKyc.vue?vue&type=script&lang=js\"\nexport * from \"./FormKyc.vue?vue&type=script&lang=js\"\n\nimport \"./FormKyc.vue?vue&type=style&index=0&id=768c9397&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-768c9397\"]])\n\nexport default __exports__","<template>\n  <div class=\"grid grid-cols-12\">\n    <div\n      class=\"col-span-12 sm:col-span-10 sm:col-start-2 lg:col-span-8 lg:col-start-3\"\n    >\n      <form v-on:submit.prevent=\"createProposal\" class=\"w-full\">\n        <label\n          class=\"block text-3xl md:text-4xl mb-4 flex items-center -ml-10 justify-center\"\n          ><span class=\"text-sm mr-1\">1</span>\n          <svg height=\"10\" width=\"11\" class=\"mr-4\">\n            <path\n              d=\"M7.586 5L4.293 1.707 5.707.293 10.414 5 5.707 9.707 4.293 8.293z\"\n            ></path>\n            <path d=\"M8 4v2H0V4z\"></path></svg\n          >Become a Member *</label\n        >\n        <span class=\"block text-lg lg:text-xl font-light opacity-75 mb-4\"\n          >The amount sent will be held in escrow pending a member vote. If the\n          proposal passes, the funds will be sent to the DAO. If the proposal\n          fails, the funds will be refunded to you.</span\n        >\n        <div class=\"grid grid-cols-12 gap-6\">\n          <div class=\"col-span-12 sm:col-span-6\">\n            <input\n              type=\"number\"\n              class=\"text-3xl bg-transparent block border-b border-black w-full text-black py-3 outline-none placeholder-black font-light\"\n              placeholder=\"$0.00\"\n              v-model=\"usdcAmount\"\n              required\n            />\n            <span\n              class=\"block text-xs md:text-base mt-3 lg:text-md font-light opacity-75 mb-4\"\n              >This is the amount of USDC tokens you are putting into escrow\n              pending a governance vote for membership.</span\n            >\n          </div>\n          <div class=\"col-span-12 sm:col-span-6\">\n            <input\n              type=\"number\"\n              class=\"text-3xl bg-transparent block border-b border-black w-full text-black py-3 outline-none placeholder-black font-light\"\n              placeholder=\"S0\"\n              required\n              v-model=\"sAmount\"\n            />\n            <span\n              class=\"block mt-3 text-xs md:text-base lg:text-md font-light opacity-75 mb-4\"\n              >This is the amount of DAO membership units you are requesting to\n              be authorized in exchange.</span\n            >\n          </div>\n        </div>\n\n        <button\n          type=\"submit\"\n          :disabled=\"processing\"\n          class=\"mx-auto mt-6 bg-black text-canary rounded px-4 py-3 text-xl shadow-sm op flex items-center w-64 justify-center\"\n        >\n          {{ btnTxt }}\n        </button>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport { ethers } from \"ethers\";\nexport default {\n  data() {\n    return {\n      btnTxt: \"Submit\",\n      processing: false,\n      usdcAmount: \"\",\n      sAmount: \"\",\n    };\n  },\n  methods: {\n    async initiate() {\n      this.processing = true;\n      var usdc = {\n        address: \"0x07865c6e87b9f70255377e024ace6630c1eaa37f\",\n        abi: [\n          {\n            inputs: [\n              { internalType: \"address\", name: \"to\", type: \"address\" },\n              { internalType: \"uint256\", name: \"value\", type: \"uint256\" },\n            ],\n            name: \"transfer\",\n            outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n            stateMutability: \"nonpayable\",\n            type: \"function\",\n          },\n        ],\n      };\n      let ethereum = window.ethereum;\n      let provider = new ethers.providers.Web3Provider(ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const usdcContract = new ethers.Contract(usdc.address, usdc.abi, signer);\n      var amt = ethers.utils\n        .parseUnits(Number(this.usdcAmount).toFixed(1), 6)\n        .toNumber();\n      try {\n        this.btnTxt = \"Processing...\";\n        let transfer = await usdcContract.transfer(this.walletAddress, 1);\n        console.log(transfer.hash, amt);\n        await this.createProposal();\n      } catch (err) {\n        this.btnTxt = \"Submit\";\n        this.processing = false;\n        console.log(err);\n      }\n    },\n    async createProposal() {\n      this.btnTxt = \"Processing...\";\n      this.processing = true;\n      console.log(\"Creating Proposal...\");\n      try {\n        const res = await axios.post(\n          \"https://salontest-terrifickid.cloud.okteto.net/onboard\",\n          {\n            profile: this.$store.state.profile,\n            usdc: this.usdcAmount,\n            s: this.sAmount,\n          }\n        );\n        if (res.data.result) {\n          this.$store.dispatch(\"connect\");\n        } else {\n          console.log(res.data);\n          this.btnTxt = \"ERROR A1: Contact Support\";\n        }\n      } catch (error) {\n        console.log(error);\n        this.btnTxt = \"ERROR A2: Contact Support\";\n      }\n    },\n  },\n  computed: {\n    walletAddress() {\n      return this.$store.state.walletAddress;\n    },\n  },\n};\n</script>\n","export const version = \"abi/5.6.3\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { arrayify, concat, hexConcat, hexlify } from \"@ethersproject/bytes\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nexport function checkResultErrors(result) {\n    // Find the first error (if any)\n    const errors = [];\n    const checkErrors = function (path, object) {\n        if (!Array.isArray(object)) {\n            return;\n        }\n        for (let key in object) {\n            const childPath = path.slice();\n            childPath.push(key);\n            try {\n                checkErrors(childPath, object[key]);\n            }\n            catch (error) {\n                errors.push({ path: childPath, error: error });\n            }\n        }\n    };\n    checkErrors([], result);\n    return errors;\n}\nexport class Coder {\n    constructor(name, type, localName, dynamic) {\n        // @TODO: defineReadOnly these\n        this.name = name;\n        this.type = type;\n        this.localName = localName;\n        this.dynamic = dynamic;\n    }\n    _throwError(message, value) {\n        logger.throwArgumentError(message, this.localName, value);\n    }\n}\nexport class Writer {\n    constructor(wordSize) {\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        this._data = [];\n        this._dataLength = 0;\n        this._padding = new Uint8Array(wordSize);\n    }\n    get data() {\n        return hexConcat(this._data);\n    }\n    get length() { return this._dataLength; }\n    _writeData(data) {\n        this._data.push(data);\n        this._dataLength += data.length;\n        return data.length;\n    }\n    appendWriter(writer) {\n        return this._writeData(concat(writer._data));\n    }\n    // Arrayish items; padded on the right to wordSize\n    writeBytes(value) {\n        let bytes = arrayify(value);\n        const paddingOffset = bytes.length % this.wordSize;\n        if (paddingOffset) {\n            bytes = concat([bytes, this._padding.slice(paddingOffset)]);\n        }\n        return this._writeData(bytes);\n    }\n    _getValue(value) {\n        let bytes = arrayify(BigNumber.from(value));\n        if (bytes.length > this.wordSize) {\n            logger.throwError(\"value out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                length: this.wordSize,\n                offset: bytes.length\n            });\n        }\n        if (bytes.length % this.wordSize) {\n            bytes = concat([this._padding.slice(bytes.length % this.wordSize), bytes]);\n        }\n        return bytes;\n    }\n    // BigNumberish items; padded on the left to wordSize\n    writeValue(value) {\n        return this._writeData(this._getValue(value));\n    }\n    writeUpdatableValue() {\n        const offset = this._data.length;\n        this._data.push(this._padding);\n        this._dataLength += this.wordSize;\n        return (value) => {\n            this._data[offset] = this._getValue(value);\n        };\n    }\n}\nexport class Reader {\n    constructor(data, wordSize, coerceFunc, allowLoose) {\n        defineReadOnly(this, \"_data\", arrayify(data));\n        defineReadOnly(this, \"wordSize\", wordSize || 32);\n        defineReadOnly(this, \"_coerceFunc\", coerceFunc);\n        defineReadOnly(this, \"allowLoose\", allowLoose);\n        this._offset = 0;\n    }\n    get data() { return hexlify(this._data); }\n    get consumed() { return this._offset; }\n    // The default Coerce function\n    static coerce(name, value) {\n        let match = name.match(\"^u?int([0-9]+)$\");\n        if (match && parseInt(match[1]) <= 48) {\n            value = value.toNumber();\n        }\n        return value;\n    }\n    coerce(name, value) {\n        if (this._coerceFunc) {\n            return this._coerceFunc(name, value);\n        }\n        return Reader.coerce(name, value);\n    }\n    _peekBytes(offset, length, loose) {\n        let alignedLength = Math.ceil(length / this.wordSize) * this.wordSize;\n        if (this._offset + alignedLength > this._data.length) {\n            if (this.allowLoose && loose && this._offset + length <= this._data.length) {\n                alignedLength = length;\n            }\n            else {\n                logger.throwError(\"data out-of-bounds\", Logger.errors.BUFFER_OVERRUN, {\n                    length: this._data.length,\n                    offset: this._offset + alignedLength\n                });\n            }\n        }\n        return this._data.slice(this._offset, this._offset + alignedLength);\n    }\n    subReader(offset) {\n        return new Reader(this._data.slice(this._offset + offset), this.wordSize, this._coerceFunc, this.allowLoose);\n    }\n    readBytes(length, loose) {\n        let bytes = this._peekBytes(0, length, !!loose);\n        this._offset += bytes.length;\n        // @TODO: Make sure the length..end bytes are all 0?\n        return bytes.slice(0, length);\n    }\n    readValue() {\n        return BigNumber.from(this.readBytes(this.wordSize));\n    }\n}\n//# sourceMappingURL=abstract-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { hexZeroPad } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class AddressCoder extends Coder {\n    constructor(localName) {\n        super(\"address\", \"address\", localName, false);\n    }\n    defaultValue() {\n        return \"0x0000000000000000000000000000000000000000\";\n    }\n    encode(writer, value) {\n        try {\n            value = getAddress(value);\n        }\n        catch (error) {\n            this._throwError(error.message, value);\n        }\n        return writer.writeValue(value);\n    }\n    decode(reader) {\n        return getAddress(hexZeroPad(reader.readValue().toHexString(), 20));\n    }\n}\n//# sourceMappingURL=address.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\n// Clones the functionality of an existing Coder, but without a localName\nexport class AnonymousCoder extends Coder {\n    constructor(coder) {\n        super(coder.name, coder.type, undefined, coder.dynamic);\n        this.coder = coder;\n    }\n    defaultValue() {\n        return this.coder.defaultValue();\n    }\n    encode(writer, value) {\n        return this.coder.encode(writer, value);\n    }\n    decode(reader) {\n        return this.coder.decode(reader);\n    }\n}\n//# sourceMappingURL=anonymous.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"../_version\";\nconst logger = new Logger(version);\nimport { Coder, Writer } from \"./abstract-coder\";\nimport { AnonymousCoder } from \"./anonymous\";\nexport function pack(writer, coders, values) {\n    let arrayValues = null;\n    if (Array.isArray(values)) {\n        arrayValues = values;\n    }\n    else if (values && typeof (values) === \"object\") {\n        let unique = {};\n        arrayValues = coders.map((coder) => {\n            const name = coder.localName;\n            if (!name) {\n                logger.throwError(\"cannot encode object for signature with missing names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            if (unique[name]) {\n                logger.throwError(\"cannot encode object for signature with duplicate names\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"values\",\n                    coder: coder,\n                    value: values\n                });\n            }\n            unique[name] = true;\n            return values[name];\n        });\n    }\n    else {\n        logger.throwArgumentError(\"invalid tuple value\", \"tuple\", values);\n    }\n    if (coders.length !== arrayValues.length) {\n        logger.throwArgumentError(\"types/value length mismatch\", \"tuple\", values);\n    }\n    let staticWriter = new Writer(writer.wordSize);\n    let dynamicWriter = new Writer(writer.wordSize);\n    let updateFuncs = [];\n    coders.forEach((coder, index) => {\n        let value = arrayValues[index];\n        if (coder.dynamic) {\n            // Get current dynamic offset (for the future pointer)\n            let dynamicOffset = dynamicWriter.length;\n            // Encode the dynamic value into the dynamicWriter\n            coder.encode(dynamicWriter, value);\n            // Prepare to populate the correct offset once we are done\n            let updateFunc = staticWriter.writeUpdatableValue();\n            updateFuncs.push((baseOffset) => {\n                updateFunc(baseOffset + dynamicOffset);\n            });\n        }\n        else {\n            coder.encode(staticWriter, value);\n        }\n    });\n    // Backfill all the dynamic offsets, now that we know the static length\n    updateFuncs.forEach((func) => { func(staticWriter.length); });\n    let length = writer.appendWriter(staticWriter);\n    length += writer.appendWriter(dynamicWriter);\n    return length;\n}\nexport function unpack(reader, coders) {\n    let values = [];\n    // A reader anchored to this base\n    let baseReader = reader.subReader(0);\n    coders.forEach((coder) => {\n        let value = null;\n        if (coder.dynamic) {\n            let offset = reader.readValue();\n            let offsetReader = baseReader.subReader(offset.toNumber());\n            try {\n                value = coder.decode(offsetReader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        else {\n            try {\n                value = coder.decode(reader);\n            }\n            catch (error) {\n                // Cannot recover from this\n                if (error.code === Logger.errors.BUFFER_OVERRUN) {\n                    throw error;\n                }\n                value = error;\n                value.baseType = coder.name;\n                value.name = coder.localName;\n                value.type = coder.type;\n            }\n        }\n        if (value != undefined) {\n            values.push(value);\n        }\n    });\n    // We only output named properties for uniquely named coders\n    const uniqueNames = coders.reduce((accum, coder) => {\n        const name = coder.localName;\n        if (name) {\n            if (!accum[name]) {\n                accum[name] = 0;\n            }\n            accum[name]++;\n        }\n        return accum;\n    }, {});\n    // Add any named parameters (i.e. tuples)\n    coders.forEach((coder, index) => {\n        let name = coder.localName;\n        if (!name || uniqueNames[name] !== 1) {\n            return;\n        }\n        if (name === \"length\") {\n            name = \"_length\";\n        }\n        if (values[name] != null) {\n            return;\n        }\n        const value = values[index];\n        if (value instanceof Error) {\n            Object.defineProperty(values, name, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n        else {\n            values[name] = value;\n        }\n    });\n    for (let i = 0; i < values.length; i++) {\n        const value = values[i];\n        if (value instanceof Error) {\n            Object.defineProperty(values, i, {\n                enumerable: true,\n                get: () => { throw value; }\n            });\n        }\n    }\n    return Object.freeze(values);\n}\nexport class ArrayCoder extends Coder {\n    constructor(coder, length, localName) {\n        const type = (coder.type + \"[\" + (length >= 0 ? length : \"\") + \"]\");\n        const dynamic = (length === -1 || coder.dynamic);\n        super(\"array\", type, localName, dynamic);\n        this.coder = coder;\n        this.length = length;\n    }\n    defaultValue() {\n        // Verifies the child coder is valid (even if the array is dynamic or 0-length)\n        const defaultChild = this.coder.defaultValue();\n        const result = [];\n        for (let i = 0; i < this.length; i++) {\n            result.push(defaultChild);\n        }\n        return result;\n    }\n    encode(writer, value) {\n        if (!Array.isArray(value)) {\n            this._throwError(\"expected array value\", value);\n        }\n        let count = this.length;\n        if (count === -1) {\n            count = value.length;\n            writer.writeValue(value.length);\n        }\n        logger.checkArgumentCount(value.length, count, \"coder array\" + (this.localName ? (\" \" + this.localName) : \"\"));\n        let coders = [];\n        for (let i = 0; i < value.length; i++) {\n            coders.push(this.coder);\n        }\n        return pack(writer, coders, value);\n    }\n    decode(reader) {\n        let count = this.length;\n        if (count === -1) {\n            count = reader.readValue().toNumber();\n            // Check that there is *roughly* enough data to ensure\n            // stray random data is not being read as a length. Each\n            // slot requires at least 32 bytes for their value (or 32\n            // bytes as a link to the data). This could use a much\n            // tighter bound, but we are erroring on the side of safety.\n            if (count * 32 > reader._data.length) {\n                logger.throwError(\"insufficient data length\", Logger.errors.BUFFER_OVERRUN, {\n                    length: reader._data.length,\n                    count: count\n                });\n            }\n        }\n        let coders = [];\n        for (let i = 0; i < count; i++) {\n            coders.push(new AnonymousCoder(this.coder));\n        }\n        return reader.coerce(this.name, unpack(reader, coders));\n    }\n}\n//# sourceMappingURL=array.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class BooleanCoder extends Coder {\n    constructor(localName) {\n        super(\"bool\", \"bool\", localName, false);\n    }\n    defaultValue() {\n        return false;\n    }\n    encode(writer, value) {\n        return writer.writeValue(value ? 1 : 0);\n    }\n    decode(reader) {\n        return reader.coerce(this.type, !reader.readValue().isZero());\n    }\n}\n//# sourceMappingURL=boolean.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\nexport class DynamicBytesCoder extends Coder {\n    constructor(type, localName) {\n        super(type, type, localName, true);\n    }\n    defaultValue() {\n        return \"0x\";\n    }\n    encode(writer, value) {\n        value = arrayify(value);\n        let length = writer.writeValue(value.length);\n        length += writer.writeBytes(value);\n        return length;\n    }\n    decode(reader) {\n        return reader.readBytes(reader.readValue().toNumber(), true);\n    }\n}\nexport class BytesCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"bytes\", localName);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(super.decode(reader)));\n    }\n}\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nimport { arrayify, hexlify } from \"@ethersproject/bytes\";\nimport { Coder } from \"./abstract-coder\";\n// @TODO: Merge this with bytes\nexport class FixedBytesCoder extends Coder {\n    constructor(size, localName) {\n        let name = \"bytes\" + String(size);\n        super(name, name, localName, false);\n        this.size = size;\n    }\n    defaultValue() {\n        return (\"0x0000000000000000000000000000000000000000000000000000000000000000\").substring(0, 2 + this.size * 2);\n    }\n    encode(writer, value) {\n        let data = arrayify(value);\n        if (data.length !== this.size) {\n            this._throwError(\"incorrect data length\", value);\n        }\n        return writer.writeBytes(data);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, hexlify(reader.readBytes(this.size)));\n    }\n}\n//# sourceMappingURL=fixed-bytes.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nexport class NullCoder extends Coder {\n    constructor(localName) {\n        super(\"null\", \"\", localName, false);\n    }\n    defaultValue() {\n        return null;\n    }\n    encode(writer, value) {\n        if (value != null) {\n            this._throwError(\"not null\", value);\n        }\n        return writer.writeBytes([]);\n    }\n    decode(reader) {\n        reader.readBytes(0);\n        return reader.coerce(this.name, null);\n    }\n}\n//# sourceMappingURL=null.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { MaxUint256, NegativeOne, One, Zero } from \"@ethersproject/constants\";\nimport { Coder } from \"./abstract-coder\";\nexport class NumberCoder extends Coder {\n    constructor(size, signed, localName) {\n        const name = ((signed ? \"int\" : \"uint\") + (size * 8));\n        super(name, name, localName, false);\n        this.size = size;\n        this.signed = signed;\n    }\n    defaultValue() {\n        return 0;\n    }\n    encode(writer, value) {\n        let v = BigNumber.from(value);\n        // Check bounds are safe for encoding\n        let maxUintValue = MaxUint256.mask(writer.wordSize * 8);\n        if (this.signed) {\n            let bounds = maxUintValue.mask(this.size * 8 - 1);\n            if (v.gt(bounds) || v.lt(bounds.add(One).mul(NegativeOne))) {\n                this._throwError(\"value out-of-bounds\", value);\n            }\n        }\n        else if (v.lt(Zero) || v.gt(maxUintValue.mask(this.size * 8))) {\n            this._throwError(\"value out-of-bounds\", value);\n        }\n        v = v.toTwos(this.size * 8).mask(this.size * 8);\n        if (this.signed) {\n            v = v.fromTwos(this.size * 8).toTwos(8 * writer.wordSize);\n        }\n        return writer.writeValue(v);\n    }\n    decode(reader) {\n        let value = reader.readValue().mask(this.size * 8);\n        if (this.signed) {\n            value = value.fromTwos(this.size * 8);\n        }\n        return reader.coerce(this.name, value);\n    }\n}\n//# sourceMappingURL=number.js.map","\"use strict\";\nimport { toUtf8Bytes, toUtf8String } from \"@ethersproject/strings\";\nimport { DynamicBytesCoder } from \"./bytes\";\nexport class StringCoder extends DynamicBytesCoder {\n    constructor(localName) {\n        super(\"string\", localName);\n    }\n    defaultValue() {\n        return \"\";\n    }\n    encode(writer, value) {\n        return super.encode(writer, toUtf8Bytes(value));\n    }\n    decode(reader) {\n        return toUtf8String(super.decode(reader));\n    }\n}\n//# sourceMappingURL=string.js.map","\"use strict\";\nimport { Coder } from \"./abstract-coder\";\nimport { pack, unpack } from \"./array\";\nexport class TupleCoder extends Coder {\n    constructor(coders, localName) {\n        let dynamic = false;\n        const types = [];\n        coders.forEach((coder) => {\n            if (coder.dynamic) {\n                dynamic = true;\n            }\n            types.push(coder.type);\n        });\n        const type = (\"tuple(\" + types.join(\",\") + \")\");\n        super(\"tuple\", type, localName, dynamic);\n        this.coders = coders;\n    }\n    defaultValue() {\n        const values = [];\n        this.coders.forEach((coder) => {\n            values.push(coder.defaultValue());\n        });\n        // We only output named properties for uniquely named coders\n        const uniqueNames = this.coders.reduce((accum, coder) => {\n            const name = coder.localName;\n            if (name) {\n                if (!accum[name]) {\n                    accum[name] = 0;\n                }\n                accum[name]++;\n            }\n            return accum;\n        }, {});\n        // Add named values\n        this.coders.forEach((coder, index) => {\n            let name = coder.localName;\n            if (!name || uniqueNames[name] !== 1) {\n                return;\n            }\n            if (name === \"length\") {\n                name = \"_length\";\n            }\n            if (values[name] != null) {\n                return;\n            }\n            values[name] = values[index];\n        });\n        return Object.freeze(values);\n    }\n    encode(writer, value) {\n        return pack(writer, this.coders, value);\n    }\n    decode(reader) {\n        return reader.coerce(this.name, unpack(reader, this.coders));\n    }\n}\n//# sourceMappingURL=tuple.js.map","\"use strict\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\nconst _constructorGuard = {};\nlet ModifiersBytes = { calldata: true, memory: true, storage: true };\nlet ModifiersNest = { calldata: true, memory: true };\nfunction checkModifier(type, name) {\n    if (type === \"bytes\" || type === \"string\") {\n        if (ModifiersBytes[name]) {\n            return true;\n        }\n    }\n    else if (type === \"address\") {\n        if (name === \"payable\") {\n            return true;\n        }\n    }\n    else if (type.indexOf(\"[\") >= 0 || type === \"tuple\") {\n        if (ModifiersNest[name]) {\n            return true;\n        }\n    }\n    if (ModifiersBytes[name] || name === \"payable\") {\n        logger.throwArgumentError(\"invalid modifier\", \"name\", name);\n    }\n    return false;\n}\n// @TODO: Make sure that children of an indexed tuple are marked with a null indexed\nfunction parseParamType(param, allowIndexed) {\n    let originalParam = param;\n    function throwError(i) {\n        logger.throwArgumentError(`unexpected character at position ${i}`, \"param\", param);\n    }\n    param = param.replace(/\\s/g, \" \");\n    function newNode(parent) {\n        let node = { type: \"\", name: \"\", parent: parent, state: { allowType: true } };\n        if (allowIndexed) {\n            node.indexed = false;\n        }\n        return node;\n    }\n    let parent = { type: \"\", name: \"\", state: { allowType: true } };\n    let node = parent;\n    for (let i = 0; i < param.length; i++) {\n        let c = param[i];\n        switch (c) {\n            case \"(\":\n                if (node.state.allowType && node.type === \"\") {\n                    node.type = \"tuple\";\n                }\n                else if (!node.state.allowParams) {\n                    throwError(i);\n                }\n                node.state.allowType = false;\n                node.type = verifyType(node.type);\n                node.components = [newNode(node)];\n                node = node.components[0];\n                break;\n            case \")\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let child = node;\n                node = node.parent;\n                if (!node) {\n                    throwError(i);\n                }\n                delete child.parent;\n                node.state.allowParams = false;\n                node.state.allowName = true;\n                node.state.allowArray = true;\n                break;\n            case \",\":\n                delete node.state;\n                if (node.name === \"indexed\") {\n                    if (!allowIndexed) {\n                        throwError(i);\n                    }\n                    node.indexed = true;\n                    node.name = \"\";\n                }\n                if (checkModifier(node.type, node.name)) {\n                    node.name = \"\";\n                }\n                node.type = verifyType(node.type);\n                let sibling = newNode(node.parent);\n                //{ type: \"\", name: \"\", parent: node.parent, state: { allowType: true } };\n                node.parent.components.push(sibling);\n                delete node.parent;\n                node = sibling;\n                break;\n            // Hit a space...\n            case \" \":\n                // If reading type, the type is done and may read a param or name\n                if (node.state.allowType) {\n                    if (node.type !== \"\") {\n                        node.type = verifyType(node.type);\n                        delete node.state.allowType;\n                        node.state.allowName = true;\n                        node.state.allowParams = true;\n                    }\n                }\n                // If reading name, the name is done\n                if (node.state.allowName) {\n                    if (node.name !== \"\") {\n                        if (node.name === \"indexed\") {\n                            if (!allowIndexed) {\n                                throwError(i);\n                            }\n                            if (node.indexed) {\n                                throwError(i);\n                            }\n                            node.indexed = true;\n                            node.name = \"\";\n                        }\n                        else if (checkModifier(node.type, node.name)) {\n                            node.name = \"\";\n                        }\n                        else {\n                            node.state.allowName = false;\n                        }\n                    }\n                }\n                break;\n            case \"[\":\n                if (!node.state.allowArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.allowArray = false;\n                node.state.allowName = false;\n                node.state.readArray = true;\n                break;\n            case \"]\":\n                if (!node.state.readArray) {\n                    throwError(i);\n                }\n                node.type += c;\n                node.state.readArray = false;\n                node.state.allowArray = true;\n                node.state.allowName = true;\n                break;\n            default:\n                if (node.state.allowType) {\n                    node.type += c;\n                    node.state.allowParams = true;\n                    node.state.allowArray = true;\n                }\n                else if (node.state.allowName) {\n                    node.name += c;\n                    delete node.state.allowArray;\n                }\n                else if (node.state.readArray) {\n                    node.type += c;\n                }\n                else {\n                    throwError(i);\n                }\n        }\n    }\n    if (node.parent) {\n        logger.throwArgumentError(\"unexpected eof\", \"param\", param);\n    }\n    delete parent.state;\n    if (node.name === \"indexed\") {\n        if (!allowIndexed) {\n            throwError(originalParam.length - 7);\n        }\n        if (node.indexed) {\n            throwError(originalParam.length - 7);\n        }\n        node.indexed = true;\n        node.name = \"\";\n    }\n    else if (checkModifier(node.type, node.name)) {\n        node.name = \"\";\n    }\n    parent.type = verifyType(parent.type);\n    return parent;\n}\nfunction populate(object, params) {\n    for (let key in params) {\n        defineReadOnly(object, key, params[key]);\n    }\n}\nexport const FormatTypes = Object.freeze({\n    // Bare formatting, as is needed for computing a sighash of an event or function\n    sighash: \"sighash\",\n    // Human-Readable with Minimal spacing and without names (compact human-readable)\n    minimal: \"minimal\",\n    // Human-Readable with nice spacing, including all names\n    full: \"full\",\n    // JSON-format a la Solidity\n    json: \"json\"\n});\nconst paramTypeArray = new RegExp(/^(.*)\\[([0-9]*)\\]$/);\nexport class ParamType {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use fromString\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new ParamType()\"\n            });\n        }\n        populate(this, params);\n        let match = this.type.match(paramTypeArray);\n        if (match) {\n            populate(this, {\n                arrayLength: parseInt(match[2] || \"-1\"),\n                arrayChildren: ParamType.fromObject({\n                    type: match[1],\n                    components: this.components\n                }),\n                baseType: \"array\"\n            });\n        }\n        else {\n            populate(this, {\n                arrayLength: null,\n                arrayChildren: null,\n                baseType: ((this.components != null) ? \"tuple\" : this.type)\n            });\n        }\n        this._isParamType = true;\n        Object.freeze(this);\n    }\n    // Format the parameter fragment\n    //   - sighash: \"(uint256,address)\"\n    //   - minimal: \"tuple(uint256,address) indexed\"\n    //   - full:    \"tuple(uint256 foo, address bar) indexed baz\"\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            let result = {\n                type: ((this.baseType === \"tuple\") ? \"tuple\" : this.type),\n                name: (this.name || undefined)\n            };\n            if (typeof (this.indexed) === \"boolean\") {\n                result.indexed = this.indexed;\n            }\n            if (this.components) {\n                result.components = this.components.map((comp) => JSON.parse(comp.format(format)));\n            }\n            return JSON.stringify(result);\n        }\n        let result = \"\";\n        // Array\n        if (this.baseType === \"array\") {\n            result += this.arrayChildren.format(format);\n            result += \"[\" + (this.arrayLength < 0 ? \"\" : String(this.arrayLength)) + \"]\";\n        }\n        else {\n            if (this.baseType === \"tuple\") {\n                if (format !== FormatTypes.sighash) {\n                    result += this.type;\n                }\n                result += \"(\" + this.components.map((comp) => comp.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \")\";\n            }\n            else {\n                result += this.type;\n            }\n        }\n        if (format !== FormatTypes.sighash) {\n            if (this.indexed === true) {\n                result += \" indexed\";\n            }\n            if (format === FormatTypes.full && this.name) {\n                result += \" \" + this.name;\n            }\n        }\n        return result;\n    }\n    static from(value, allowIndexed) {\n        if (typeof (value) === \"string\") {\n            return ParamType.fromString(value, allowIndexed);\n        }\n        return ParamType.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ParamType.isParamType(value)) {\n            return value;\n        }\n        return new ParamType(_constructorGuard, {\n            name: (value.name || null),\n            type: verifyType(value.type),\n            indexed: ((value.indexed == null) ? null : !!value.indexed),\n            components: (value.components ? value.components.map(ParamType.fromObject) : null)\n        });\n    }\n    static fromString(value, allowIndexed) {\n        function ParamTypify(node) {\n            return ParamType.fromObject({\n                name: node.name,\n                type: node.type,\n                indexed: node.indexed,\n                components: node.components\n            });\n        }\n        return ParamTypify(parseParamType(value, !!allowIndexed));\n    }\n    static isParamType(value) {\n        return !!(value != null && value._isParamType);\n    }\n}\n;\nfunction parseParams(value, allowIndex) {\n    return splitNesting(value).map((param) => ParamType.fromString(param, allowIndex));\n}\nexport class Fragment {\n    constructor(constructorGuard, params) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"use a static from method\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new Fragment()\"\n            });\n        }\n        populate(this, params);\n        this._isFragment = true;\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            return Fragment.fromString(value);\n        }\n        return Fragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (Fragment.isFragment(value)) {\n            return value;\n        }\n        switch (value.type) {\n            case \"function\":\n                return FunctionFragment.fromObject(value);\n            case \"event\":\n                return EventFragment.fromObject(value);\n            case \"constructor\":\n                return ConstructorFragment.fromObject(value);\n            case \"error\":\n                return ErrorFragment.fromObject(value);\n            case \"fallback\":\n            case \"receive\":\n                // @TODO: Something? Maybe return a FunctionFragment? A custom DefaultFunctionFragment?\n                return null;\n        }\n        return logger.throwArgumentError(\"invalid fragment object\", \"value\", value);\n    }\n    static fromString(value) {\n        // Make sure the \"returns\" is surrounded by a space and all whitespace is exactly one space\n        value = value.replace(/\\s/g, \" \");\n        value = value.replace(/\\(/g, \" (\").replace(/\\)/g, \") \").replace(/\\s+/g, \" \");\n        value = value.trim();\n        if (value.split(\" \")[0] === \"event\") {\n            return EventFragment.fromString(value.substring(5).trim());\n        }\n        else if (value.split(\" \")[0] === \"function\") {\n            return FunctionFragment.fromString(value.substring(8).trim());\n        }\n        else if (value.split(\"(\")[0].trim() === \"constructor\") {\n            return ConstructorFragment.fromString(value.trim());\n        }\n        else if (value.split(\" \")[0] === \"error\") {\n            return ErrorFragment.fromString(value.substring(5).trim());\n        }\n        return logger.throwArgumentError(\"unsupported fragment\", \"value\", value);\n    }\n    static isFragment(value) {\n        return !!(value && value._isFragment);\n    }\n}\nexport class EventFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"event\",\n                anonymous: this.anonymous,\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"event \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.anonymous) {\n                result += \"anonymous \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return EventFragment.fromString(value);\n        }\n        return EventFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (EventFragment.isEventFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"event\") {\n            logger.throwArgumentError(\"invalid event object\", \"value\", value);\n        }\n        const params = {\n            name: verifyIdentifier(value.name),\n            anonymous: value.anonymous,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            type: \"event\"\n        };\n        return new EventFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let match = value.match(regexParen);\n        if (!match) {\n            logger.throwArgumentError(\"invalid event string\", \"value\", value);\n        }\n        let anonymous = false;\n        match[3].split(\" \").forEach((modifier) => {\n            switch (modifier.trim()) {\n                case \"anonymous\":\n                    anonymous = true;\n                    break;\n                case \"\":\n                    break;\n                default:\n                    logger.warn(\"unknown modifier: \" + modifier);\n            }\n        });\n        return EventFragment.fromObject({\n            name: match[1].trim(),\n            anonymous: anonymous,\n            inputs: parseParams(match[2], true),\n            type: \"event\"\n        });\n    }\n    static isEventFragment(value) {\n        return (value && value._isFragment && value.type === \"event\");\n    }\n}\nfunction parseGas(value, params) {\n    params.gas = null;\n    let comps = value.split(\"@\");\n    if (comps.length !== 1) {\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature\", \"value\", value);\n        }\n        if (!comps[1].match(/^[0-9]+$/)) {\n            logger.throwArgumentError(\"invalid human-readable ABI signature gas\", \"value\", value);\n        }\n        params.gas = BigNumber.from(comps[1]);\n        return comps[0];\n    }\n    return value;\n}\nfunction parseModifiers(value, params) {\n    params.constant = false;\n    params.payable = false;\n    params.stateMutability = \"nonpayable\";\n    value.split(\" \").forEach((modifier) => {\n        switch (modifier.trim()) {\n            case \"constant\":\n                params.constant = true;\n                break;\n            case \"payable\":\n                params.payable = true;\n                params.stateMutability = \"payable\";\n                break;\n            case \"nonpayable\":\n                params.payable = false;\n                params.stateMutability = \"nonpayable\";\n                break;\n            case \"pure\":\n                params.constant = true;\n                params.stateMutability = \"pure\";\n                break;\n            case \"view\":\n                params.constant = true;\n                params.stateMutability = \"view\";\n                break;\n            case \"external\":\n            case \"public\":\n            case \"\":\n                break;\n            default:\n                console.log(\"unknown modifier: \" + modifier);\n        }\n    });\n}\nfunction verifyState(value) {\n    let result = {\n        constant: false,\n        payable: true,\n        stateMutability: \"payable\"\n    };\n    if (value.stateMutability != null) {\n        result.stateMutability = value.stateMutability;\n        // Set (and check things are consistent) the constant property\n        result.constant = (result.stateMutability === \"view\" || result.stateMutability === \"pure\");\n        if (value.constant != null) {\n            if ((!!value.constant) !== result.constant) {\n                logger.throwArgumentError(\"cannot have constant function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n        // Set (and check things are consistent) the payable property\n        result.payable = (result.stateMutability === \"payable\");\n        if (value.payable != null) {\n            if ((!!value.payable) !== result.payable) {\n                logger.throwArgumentError(\"cannot have payable function with mutability \" + result.stateMutability, \"value\", value);\n            }\n        }\n    }\n    else if (value.payable != null) {\n        result.payable = !!value.payable;\n        // If payable we can assume non-constant; otherwise we can't assume\n        if (value.constant == null && !result.payable && value.type !== \"constructor\") {\n            logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n        }\n        result.constant = !!value.constant;\n        if (result.constant) {\n            result.stateMutability = \"view\";\n        }\n        else {\n            result.stateMutability = (result.payable ? \"payable\" : \"nonpayable\");\n        }\n        if (result.payable && result.constant) {\n            logger.throwArgumentError(\"cannot have constant payable function\", \"value\", value);\n        }\n    }\n    else if (value.constant != null) {\n        result.constant = !!value.constant;\n        result.payable = !result.constant;\n        result.stateMutability = (result.constant ? \"view\" : \"payable\");\n    }\n    else if (value.type !== \"constructor\") {\n        logger.throwArgumentError(\"unable to determine stateMutability\", \"value\", value);\n    }\n    return result;\n}\nexport class ConstructorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"constructor\",\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format)))\n            });\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwError(\"cannot format a constructor for sighash\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"format(sighash)\"\n            });\n        }\n        let result = \"constructor(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (this.stateMutability && this.stateMutability !== \"nonpayable\") {\n            result += this.stateMutability + \" \";\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ConstructorFragment.fromString(value);\n        }\n        return ConstructorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ConstructorFragment.isConstructorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        if (state.constant) {\n            logger.throwArgumentError(\"constructor cannot be constant\", \"value\", value);\n        }\n        const params = {\n            name: null,\n            type: value.type,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new ConstructorFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"constructor\" };\n        value = parseGas(value, params);\n        let parens = value.match(regexParen);\n        if (!parens || parens[1].trim() !== \"constructor\") {\n            logger.throwArgumentError(\"invalid constructor string\", \"value\", value);\n        }\n        params.inputs = parseParams(parens[2].trim(), false);\n        parseModifiers(parens[3].trim(), params);\n        return ConstructorFragment.fromObject(params);\n    }\n    static isConstructorFragment(value) {\n        return (value && value._isFragment && value.type === \"constructor\");\n    }\n}\nexport class FunctionFragment extends ConstructorFragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"function\",\n                name: this.name,\n                constant: this.constant,\n                stateMutability: ((this.stateMutability !== \"nonpayable\") ? this.stateMutability : undefined),\n                payable: this.payable,\n                gas: (this.gas ? this.gas.toNumber() : undefined),\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n                outputs: this.outputs.map((output) => JSON.parse(output.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"function \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        if (format !== FormatTypes.sighash) {\n            if (this.stateMutability) {\n                if (this.stateMutability !== \"nonpayable\") {\n                    result += (this.stateMutability + \" \");\n                }\n            }\n            else if (this.constant) {\n                result += \"view \";\n            }\n            if (this.outputs && this.outputs.length) {\n                result += \"returns (\" + this.outputs.map((output) => output.format(format)).join(\", \") + \") \";\n            }\n            if (this.gas != null) {\n                result += \"@\" + this.gas.toString() + \" \";\n            }\n        }\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return FunctionFragment.fromString(value);\n        }\n        return FunctionFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (FunctionFragment.isFunctionFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"function\") {\n            logger.throwArgumentError(\"invalid function object\", \"value\", value);\n        }\n        let state = verifyState(value);\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            constant: state.constant,\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : []),\n            outputs: (value.outputs ? value.outputs.map(ParamType.fromObject) : []),\n            payable: state.payable,\n            stateMutability: state.stateMutability,\n            gas: (value.gas ? BigNumber.from(value.gas) : null)\n        };\n        return new FunctionFragment(_constructorGuard, params);\n    }\n    static fromString(value) {\n        let params = { type: \"function\" };\n        value = parseGas(value, params);\n        let comps = value.split(\" returns \");\n        if (comps.length > 2) {\n            logger.throwArgumentError(\"invalid function string\", \"value\", value);\n        }\n        let parens = comps[0].match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid function signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        parseModifiers(parens[3].trim(), params);\n        // We have outputs\n        if (comps.length > 1) {\n            let returns = comps[1].match(regexParen);\n            if (returns[1].trim() != \"\" || returns[3].trim() != \"\") {\n                logger.throwArgumentError(\"unexpected tokens\", \"value\", value);\n            }\n            params.outputs = parseParams(returns[2], false);\n        }\n        else {\n            params.outputs = [];\n        }\n        return FunctionFragment.fromObject(params);\n    }\n    static isFunctionFragment(value) {\n        return (value && value._isFragment && value.type === \"function\");\n    }\n}\n//export class StructFragment extends Fragment {\n//}\nfunction checkForbidden(fragment) {\n    const sig = fragment.format();\n    if (sig === \"Error(string)\" || sig === \"Panic(uint256)\") {\n        logger.throwArgumentError(`cannot specify user defined ${sig} error`, \"fragment\", fragment);\n    }\n    return fragment;\n}\nexport class ErrorFragment extends Fragment {\n    format(format) {\n        if (!format) {\n            format = FormatTypes.sighash;\n        }\n        if (!FormatTypes[format]) {\n            logger.throwArgumentError(\"invalid format type\", \"format\", format);\n        }\n        if (format === FormatTypes.json) {\n            return JSON.stringify({\n                type: \"error\",\n                name: this.name,\n                inputs: this.inputs.map((input) => JSON.parse(input.format(format))),\n            });\n        }\n        let result = \"\";\n        if (format !== FormatTypes.sighash) {\n            result += \"error \";\n        }\n        result += this.name + \"(\" + this.inputs.map((input) => input.format(format)).join((format === FormatTypes.full) ? \", \" : \",\") + \") \";\n        return result.trim();\n    }\n    static from(value) {\n        if (typeof (value) === \"string\") {\n            return ErrorFragment.fromString(value);\n        }\n        return ErrorFragment.fromObject(value);\n    }\n    static fromObject(value) {\n        if (ErrorFragment.isErrorFragment(value)) {\n            return value;\n        }\n        if (value.type !== \"error\") {\n            logger.throwArgumentError(\"invalid error object\", \"value\", value);\n        }\n        const params = {\n            type: value.type,\n            name: verifyIdentifier(value.name),\n            inputs: (value.inputs ? value.inputs.map(ParamType.fromObject) : [])\n        };\n        return checkForbidden(new ErrorFragment(_constructorGuard, params));\n    }\n    static fromString(value) {\n        let params = { type: \"error\" };\n        let parens = value.match(regexParen);\n        if (!parens) {\n            logger.throwArgumentError(\"invalid error signature\", \"value\", value);\n        }\n        params.name = parens[1].trim();\n        if (params.name) {\n            verifyIdentifier(params.name);\n        }\n        params.inputs = parseParams(parens[2], false);\n        return checkForbidden(ErrorFragment.fromObject(params));\n    }\n    static isErrorFragment(value) {\n        return (value && value._isFragment && value.type === \"error\");\n    }\n}\nfunction verifyType(type) {\n    // These need to be transformed to their full description\n    if (type.match(/^uint($|[^1-9])/)) {\n        type = \"uint256\" + type.substring(4);\n    }\n    else if (type.match(/^int($|[^1-9])/)) {\n        type = \"int256\" + type.substring(3);\n    }\n    // @TODO: more verification\n    return type;\n}\n// See: https://github.com/ethereum/solidity/blob/1f8f1a3db93a548d0555e3e14cfc55a10e25b60e/docs/grammar/SolidityLexer.g4#L234\nconst regexIdentifier = new RegExp(\"^[a-zA-Z$_][a-zA-Z0-9$_]*$\");\nfunction verifyIdentifier(value) {\n    if (!value || !value.match(regexIdentifier)) {\n        logger.throwArgumentError(`invalid identifier \"${value}\"`, \"value\", value);\n    }\n    return value;\n}\nconst regexParen = new RegExp(\"^([^)(]*)\\\\((.*)\\\\)([^)(]*)$\");\nfunction splitNesting(value) {\n    value = value.trim();\n    let result = [];\n    let accum = \"\";\n    let depth = 0;\n    for (let offset = 0; offset < value.length; offset++) {\n        let c = value[offset];\n        if (c === \",\" && depth === 0) {\n            result.push(accum);\n            accum = \"\";\n        }\n        else {\n            accum += c;\n            if (c === \"(\") {\n                depth++;\n            }\n            else if (c === \")\") {\n                depth--;\n                if (depth === -1) {\n                    logger.throwArgumentError(\"unbalanced parenthesis\", \"value\", value);\n                }\n            }\n        }\n    }\n    if (accum) {\n        result.push(accum);\n    }\n    return result;\n}\n//# sourceMappingURL=fragments.js.map","\"use strict\";\n// See: https://github.com/ethereum/wiki/wiki/Ethereum-Contract-ABI\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { defineReadOnly } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { Reader, Writer } from \"./coders/abstract-coder\";\nimport { AddressCoder } from \"./coders/address\";\nimport { ArrayCoder } from \"./coders/array\";\nimport { BooleanCoder } from \"./coders/boolean\";\nimport { BytesCoder } from \"./coders/bytes\";\nimport { FixedBytesCoder } from \"./coders/fixed-bytes\";\nimport { NullCoder } from \"./coders/null\";\nimport { NumberCoder } from \"./coders/number\";\nimport { StringCoder } from \"./coders/string\";\nimport { TupleCoder } from \"./coders/tuple\";\nimport { ParamType } from \"./fragments\";\nconst paramTypeBytes = new RegExp(/^bytes([0-9]*)$/);\nconst paramTypeNumber = new RegExp(/^(u?int)([0-9]*)$/);\nexport class AbiCoder {\n    constructor(coerceFunc) {\n        defineReadOnly(this, \"coerceFunc\", coerceFunc || null);\n    }\n    _getCoder(param) {\n        switch (param.baseType) {\n            case \"address\":\n                return new AddressCoder(param.name);\n            case \"bool\":\n                return new BooleanCoder(param.name);\n            case \"string\":\n                return new StringCoder(param.name);\n            case \"bytes\":\n                return new BytesCoder(param.name);\n            case \"array\":\n                return new ArrayCoder(this._getCoder(param.arrayChildren), param.arrayLength, param.name);\n            case \"tuple\":\n                return new TupleCoder((param.components || []).map((component) => {\n                    return this._getCoder(component);\n                }), param.name);\n            case \"\":\n                return new NullCoder(param.name);\n        }\n        // u?int[0-9]*\n        let match = param.type.match(paramTypeNumber);\n        if (match) {\n            let size = parseInt(match[2] || \"256\");\n            if (size === 0 || size > 256 || (size % 8) !== 0) {\n                logger.throwArgumentError(\"invalid \" + match[1] + \" bit length\", \"param\", param);\n            }\n            return new NumberCoder(size / 8, (match[1] === \"int\"), param.name);\n        }\n        // bytes[0-9]+\n        match = param.type.match(paramTypeBytes);\n        if (match) {\n            let size = parseInt(match[1]);\n            if (size === 0 || size > 32) {\n                logger.throwArgumentError(\"invalid bytes length\", \"param\", param);\n            }\n            return new FixedBytesCoder(size, param.name);\n        }\n        return logger.throwArgumentError(\"invalid type\", \"type\", param.type);\n    }\n    _getWordSize() { return 32; }\n    _getReader(data, allowLoose) {\n        return new Reader(data, this._getWordSize(), this.coerceFunc, allowLoose);\n    }\n    _getWriter() {\n        return new Writer(this._getWordSize());\n    }\n    getDefaultValue(types) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.defaultValue();\n    }\n    encode(types, values) {\n        if (types.length !== values.length) {\n            logger.throwError(\"types/values length mismatch\", Logger.errors.INVALID_ARGUMENT, {\n                count: { types: types.length, values: values.length },\n                value: { types: types, values: values }\n            });\n        }\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = (new TupleCoder(coders, \"_\"));\n        const writer = this._getWriter();\n        coder.encode(writer, values);\n        return writer.data;\n    }\n    decode(types, data, loose) {\n        const coders = types.map((type) => this._getCoder(ParamType.from(type)));\n        const coder = new TupleCoder(coders, \"_\");\n        return coder.decode(this._getReader(arrayify(data), loose));\n    }\n}\nexport const defaultAbiCoder = new AbiCoder();\n//# sourceMappingURL=abi-coder.js.map","\"use strict\";\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexDataSlice, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { id } from \"@ethersproject/hash\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { defineReadOnly, Description, getStatic } from \"@ethersproject/properties\";\nimport { defaultAbiCoder } from \"./abi-coder\";\nimport { checkResultErrors } from \"./coders/abstract-coder\";\nimport { ConstructorFragment, EventFragment, FormatTypes, Fragment, FunctionFragment, ParamType } from \"./fragments\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport { checkResultErrors };\nexport class LogDescription extends Description {\n}\nexport class TransactionDescription extends Description {\n}\nexport class ErrorDescription extends Description {\n}\nexport class Indexed extends Description {\n    static isIndexed(value) {\n        return !!(value && value._isIndexed);\n    }\n}\nconst BuiltinErrors = {\n    \"0x08c379a0\": { signature: \"Error(string)\", name: \"Error\", inputs: [\"string\"], reason: true },\n    \"0x4e487b71\": { signature: \"Panic(uint256)\", name: \"Panic\", inputs: [\"uint256\"] }\n};\nfunction wrapAccessError(property, error) {\n    const wrap = new Error(`deferred error during ABI decoding triggered accessing ${property}`);\n    wrap.error = error;\n    return wrap;\n}\n/*\nfunction checkNames(fragment: Fragment, type: \"input\" | \"output\", params: Array<ParamType>): void {\n    params.reduce((accum, param) => {\n        if (param.name) {\n            if (accum[param.name]) {\n                logger.throwArgumentError(`duplicate ${ type } parameter ${ JSON.stringify(param.name) } in ${ fragment.format(\"full\") }`, \"fragment\", fragment);\n            }\n            accum[param.name] = true;\n        }\n        return accum;\n    }, <{ [ name: string ]: boolean }>{ });\n}\n*/\nexport class Interface {\n    constructor(fragments) {\n        let abi = [];\n        if (typeof (fragments) === \"string\") {\n            abi = JSON.parse(fragments);\n        }\n        else {\n            abi = fragments;\n        }\n        defineReadOnly(this, \"fragments\", abi.map((fragment) => {\n            return Fragment.from(fragment);\n        }).filter((fragment) => (fragment != null)));\n        defineReadOnly(this, \"_abiCoder\", getStatic(new.target, \"getAbiCoder\")());\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"errors\", {});\n        defineReadOnly(this, \"events\", {});\n        defineReadOnly(this, \"structs\", {});\n        // Add all fragments by their signature\n        this.fragments.forEach((fragment) => {\n            let bucket = null;\n            switch (fragment.type) {\n                case \"constructor\":\n                    if (this.deploy) {\n                        logger.warn(\"duplicate definition - constructor\");\n                        return;\n                    }\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    defineReadOnly(this, \"deploy\", fragment);\n                    return;\n                case \"function\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    //checkNames(fragment, \"output\", (<FunctionFragment>fragment).outputs);\n                    bucket = this.functions;\n                    break;\n                case \"event\":\n                    //checkNames(fragment, \"input\", fragment.inputs);\n                    bucket = this.events;\n                    break;\n                case \"error\":\n                    bucket = this.errors;\n                    break;\n                default:\n                    return;\n            }\n            let signature = fragment.format();\n            if (bucket[signature]) {\n                logger.warn(\"duplicate definition - \" + signature);\n                return;\n            }\n            bucket[signature] = fragment;\n        });\n        // If we do not have a constructor add a default\n        if (!this.deploy) {\n            defineReadOnly(this, \"deploy\", ConstructorFragment.from({\n                payable: false,\n                type: \"constructor\"\n            }));\n        }\n        defineReadOnly(this, \"_isInterface\", true);\n    }\n    format(format) {\n        if (!format) {\n            format = FormatTypes.full;\n        }\n        if (format === FormatTypes.sighash) {\n            logger.throwArgumentError(\"interface does not support formatting sighash\", \"format\", format);\n        }\n        const abi = this.fragments.map((fragment) => fragment.format(format));\n        // We need to re-bundle the JSON fragments a bit\n        if (format === FormatTypes.json) {\n            return JSON.stringify(abi.map((j) => JSON.parse(j)));\n        }\n        return abi;\n    }\n    // Sub-classes can override these to handle other blockchains\n    static getAbiCoder() {\n        return defaultAbiCoder;\n    }\n    static getAddress(address) {\n        return getAddress(address);\n    }\n    static getSighash(fragment) {\n        return hexDataSlice(id(fragment.format()), 0, 4);\n    }\n    static getEventTopic(eventFragment) {\n        return id(eventFragment.format());\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getFunction(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            for (const name in this.functions) {\n                if (nameOrSignatureOrSighash === this.getSighash(name)) {\n                    return this.functions[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching function\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.functions).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching function\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching functions\", \"name\", name);\n            }\n            return this.functions[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.functions[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching function\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Find an event definition by any means necessary (unless it is ambiguous)\n    getEvent(nameOrSignatureOrTopic) {\n        if (isHexString(nameOrSignatureOrTopic)) {\n            const topichash = nameOrSignatureOrTopic.toLowerCase();\n            for (const name in this.events) {\n                if (topichash === this.getEventTopic(name)) {\n                    return this.events[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching event\", \"topichash\", topichash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrTopic.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrTopic.trim();\n            const matching = Object.keys(this.events).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching event\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching events\", \"name\", name);\n            }\n            return this.events[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.events[EventFragment.fromString(nameOrSignatureOrTopic).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching event\", \"signature\", nameOrSignatureOrTopic);\n        }\n        return result;\n    }\n    // Find a function definition by any means necessary (unless it is ambiguous)\n    getError(nameOrSignatureOrSighash) {\n        if (isHexString(nameOrSignatureOrSighash)) {\n            const getSighash = getStatic(this.constructor, \"getSighash\");\n            for (const name in this.errors) {\n                const error = this.errors[name];\n                if (nameOrSignatureOrSighash === getSighash(error)) {\n                    return this.errors[name];\n                }\n            }\n            logger.throwArgumentError(\"no matching error\", \"sighash\", nameOrSignatureOrSighash);\n        }\n        // It is a bare name, look up the function (will return null if ambiguous)\n        if (nameOrSignatureOrSighash.indexOf(\"(\") === -1) {\n            const name = nameOrSignatureOrSighash.trim();\n            const matching = Object.keys(this.errors).filter((f) => (f.split(\"(\" /* fix:) */)[0] === name));\n            if (matching.length === 0) {\n                logger.throwArgumentError(\"no matching error\", \"name\", name);\n            }\n            else if (matching.length > 1) {\n                logger.throwArgumentError(\"multiple matching errors\", \"name\", name);\n            }\n            return this.errors[matching[0]];\n        }\n        // Normalize the signature and lookup the function\n        const result = this.errors[FunctionFragment.fromString(nameOrSignatureOrSighash).format()];\n        if (!result) {\n            logger.throwArgumentError(\"no matching error\", \"signature\", nameOrSignatureOrSighash);\n        }\n        return result;\n    }\n    // Get the sighash (the bytes4 selector) used by Solidity to identify a function\n    getSighash(fragment) {\n        if (typeof (fragment) === \"string\") {\n            try {\n                fragment = this.getFunction(fragment);\n            }\n            catch (error) {\n                try {\n                    fragment = this.getError(fragment);\n                }\n                catch (_) {\n                    throw error;\n                }\n            }\n        }\n        return getStatic(this.constructor, \"getSighash\")(fragment);\n    }\n    // Get the topic (the bytes32 hash) used by Solidity to identify an event\n    getEventTopic(eventFragment) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        return getStatic(this.constructor, \"getEventTopic\")(eventFragment);\n    }\n    _decodeParams(params, data) {\n        return this._abiCoder.decode(params, data);\n    }\n    _encodeParams(params, values) {\n        return this._abiCoder.encode(params, values);\n    }\n    encodeDeploy(values) {\n        return this._encodeParams(this.deploy.inputs, values || []);\n    }\n    decodeErrorResult(fragment, data) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(fragment)) {\n            logger.throwArgumentError(`data signature does not match error ${fragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(fragment.inputs, bytes.slice(4));\n    }\n    encodeErrorResult(fragment, values) {\n        if (typeof (fragment) === \"string\") {\n            fragment = this.getError(fragment);\n        }\n        return hexlify(concat([\n            this.getSighash(fragment),\n            this._encodeParams(fragment.inputs, values || [])\n        ]));\n    }\n    // Decode the data for a function call (e.g. tx.data)\n    decodeFunctionData(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        const bytes = arrayify(data);\n        if (hexlify(bytes.slice(0, 4)) !== this.getSighash(functionFragment)) {\n            logger.throwArgumentError(`data signature does not match function ${functionFragment.name}.`, \"data\", hexlify(bytes));\n        }\n        return this._decodeParams(functionFragment.inputs, bytes.slice(4));\n    }\n    // Encode the data for a function call (e.g. tx.data)\n    encodeFunctionData(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(concat([\n            this.getSighash(functionFragment),\n            this._encodeParams(functionFragment.inputs, values || [])\n        ]));\n    }\n    // Decode the result from a function call (e.g. from eth_call)\n    decodeFunctionResult(functionFragment, data) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        let bytes = arrayify(data);\n        let reason = null;\n        let message = \"\";\n        let errorArgs = null;\n        let errorName = null;\n        let errorSignature = null;\n        switch (bytes.length % this._abiCoder._getWordSize()) {\n            case 0:\n                try {\n                    return this._abiCoder.decode(functionFragment.outputs, bytes);\n                }\n                catch (error) { }\n                break;\n            case 4: {\n                const selector = hexlify(bytes.slice(0, 4));\n                const builtin = BuiltinErrors[selector];\n                if (builtin) {\n                    errorArgs = this._abiCoder.decode(builtin.inputs, bytes.slice(4));\n                    errorName = builtin.name;\n                    errorSignature = builtin.signature;\n                    if (builtin.reason) {\n                        reason = errorArgs[0];\n                    }\n                    if (errorName === \"Error\") {\n                        message = `; VM Exception while processing transaction: reverted with reason string ${JSON.stringify(errorArgs[0])}`;\n                    }\n                    else if (errorName === \"Panic\") {\n                        message = `; VM Exception while processing transaction: reverted with panic code ${errorArgs[0]}`;\n                    }\n                }\n                else {\n                    try {\n                        const error = this.getError(selector);\n                        errorArgs = this._abiCoder.decode(error.inputs, bytes.slice(4));\n                        errorName = error.name;\n                        errorSignature = error.format();\n                    }\n                    catch (error) { }\n                }\n                break;\n            }\n        }\n        return logger.throwError(\"call revert exception\" + message, Logger.errors.CALL_EXCEPTION, {\n            method: functionFragment.format(),\n            data: hexlify(data), errorArgs, errorName, errorSignature, reason\n        });\n    }\n    // Encode the result for a function call (e.g. for eth_call)\n    encodeFunctionResult(functionFragment, values) {\n        if (typeof (functionFragment) === \"string\") {\n            functionFragment = this.getFunction(functionFragment);\n        }\n        return hexlify(this._abiCoder.encode(functionFragment.outputs, values || []));\n    }\n    // Create the filter for the event with search criteria (e.g. for eth_filterLog)\n    encodeFilterTopics(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (values.length > eventFragment.inputs.length) {\n            logger.throwError(\"too many arguments for \" + eventFragment.format(), Logger.errors.UNEXPECTED_ARGUMENT, {\n                argument: \"values\",\n                value: values\n            });\n        }\n        let topics = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        const encodeTopic = (param, value) => {\n            if (param.type === \"string\") {\n                return id(value);\n            }\n            else if (param.type === \"bytes\") {\n                return keccak256(hexlify(value));\n            }\n            // Check addresses are valid\n            if (param.type === \"address\") {\n                this._abiCoder.encode([\"address\"], [value]);\n            }\n            return hexZeroPad(hexlify(value), 32);\n        };\n        values.forEach((value, index) => {\n            let param = eventFragment.inputs[index];\n            if (!param.indexed) {\n                if (value != null) {\n                    logger.throwArgumentError(\"cannot filter non-indexed parameters; must be null\", (\"contract.\" + param.name), value);\n                }\n                return;\n            }\n            if (value == null) {\n                topics.push(null);\n            }\n            else if (param.baseType === \"array\" || param.baseType === \"tuple\") {\n                logger.throwArgumentError(\"filtering with tuples or arrays not supported\", (\"contract.\" + param.name), value);\n            }\n            else if (Array.isArray(value)) {\n                topics.push(value.map((value) => encodeTopic(param, value)));\n            }\n            else {\n                topics.push(encodeTopic(param, value));\n            }\n        });\n        // Trim off trailing nulls\n        while (topics.length && topics[topics.length - 1] === null) {\n            topics.pop();\n        }\n        return topics;\n    }\n    encodeEventLog(eventFragment, values) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        const topics = [];\n        const dataTypes = [];\n        const dataValues = [];\n        if (!eventFragment.anonymous) {\n            topics.push(this.getEventTopic(eventFragment));\n        }\n        if (values.length !== eventFragment.inputs.length) {\n            logger.throwArgumentError(\"event arguments/values mismatch\", \"values\", values);\n        }\n        eventFragment.inputs.forEach((param, index) => {\n            const value = values[index];\n            if (param.indexed) {\n                if (param.type === \"string\") {\n                    topics.push(id(value));\n                }\n                else if (param.type === \"bytes\") {\n                    topics.push(keccak256(value));\n                }\n                else if (param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    // @TODO\n                    throw new Error(\"not implemented\");\n                }\n                else {\n                    topics.push(this._abiCoder.encode([param.type], [value]));\n                }\n            }\n            else {\n                dataTypes.push(param);\n                dataValues.push(value);\n            }\n        });\n        return {\n            data: this._abiCoder.encode(dataTypes, dataValues),\n            topics: topics\n        };\n    }\n    // Decode a filter for the event and the search criteria\n    decodeEventLog(eventFragment, data, topics) {\n        if (typeof (eventFragment) === \"string\") {\n            eventFragment = this.getEvent(eventFragment);\n        }\n        if (topics != null && !eventFragment.anonymous) {\n            let topicHash = this.getEventTopic(eventFragment);\n            if (!isHexString(topics[0], 32) || topics[0].toLowerCase() !== topicHash) {\n                logger.throwError(\"fragment/topic mismatch\", Logger.errors.INVALID_ARGUMENT, { argument: \"topics[0]\", expected: topicHash, value: topics[0] });\n            }\n            topics = topics.slice(1);\n        }\n        let indexed = [];\n        let nonIndexed = [];\n        let dynamic = [];\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (param.type === \"string\" || param.type === \"bytes\" || param.baseType === \"tuple\" || param.baseType === \"array\") {\n                    indexed.push(ParamType.fromObject({ type: \"bytes32\", name: param.name }));\n                    dynamic.push(true);\n                }\n                else {\n                    indexed.push(param);\n                    dynamic.push(false);\n                }\n            }\n            else {\n                nonIndexed.push(param);\n                dynamic.push(false);\n            }\n        });\n        let resultIndexed = (topics != null) ? this._abiCoder.decode(indexed, concat(topics)) : null;\n        let resultNonIndexed = this._abiCoder.decode(nonIndexed, data, true);\n        let result = [];\n        let nonIndexedIndex = 0, indexedIndex = 0;\n        eventFragment.inputs.forEach((param, index) => {\n            if (param.indexed) {\n                if (resultIndexed == null) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: null });\n                }\n                else if (dynamic[index]) {\n                    result[index] = new Indexed({ _isIndexed: true, hash: resultIndexed[indexedIndex++] });\n                }\n                else {\n                    try {\n                        result[index] = resultIndexed[indexedIndex++];\n                    }\n                    catch (error) {\n                        result[index] = error;\n                    }\n                }\n            }\n            else {\n                try {\n                    result[index] = resultNonIndexed[nonIndexedIndex++];\n                }\n                catch (error) {\n                    result[index] = error;\n                }\n            }\n            // Add the keyword argument if named and safe\n            if (param.name && result[param.name] == null) {\n                const value = result[index];\n                // Make error named values throw on access\n                if (value instanceof Error) {\n                    Object.defineProperty(result, param.name, {\n                        enumerable: true,\n                        get: () => { throw wrapAccessError(`property ${JSON.stringify(param.name)}`, value); }\n                    });\n                }\n                else {\n                    result[param.name] = value;\n                }\n            }\n        });\n        // Make all error indexed values throw on access\n        for (let i = 0; i < result.length; i++) {\n            const value = result[i];\n            if (value instanceof Error) {\n                Object.defineProperty(result, i, {\n                    enumerable: true,\n                    get: () => { throw wrapAccessError(`index ${i}`, value); }\n                });\n            }\n        }\n        return Object.freeze(result);\n    }\n    // Given a transaction, find the matching function fragment (if any) and\n    // determine all its properties and call parameters\n    parseTransaction(tx) {\n        let fragment = this.getFunction(tx.data.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new TransactionDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + tx.data.substring(10)),\n            functionFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n            value: BigNumber.from(tx.value || \"0\"),\n        });\n    }\n    // @TODO\n    //parseCallResult(data: BytesLike): ??\n    // Given an event log, find the matching event fragment (if any) and\n    // determine all its properties and values\n    parseLog(log) {\n        let fragment = this.getEvent(log.topics[0]);\n        if (!fragment || fragment.anonymous) {\n            return null;\n        }\n        // @TODO: If anonymous, and the only method, and the input count matches, should we parse?\n        //        Probably not, because just because it is the only event in the ABI does\n        //        not mean we have the full ABI; maybe just a fragment?\n        return new LogDescription({\n            eventFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            topic: this.getEventTopic(fragment),\n            args: this.decodeEventLog(fragment, log.data, log.topics)\n        });\n    }\n    parseError(data) {\n        const hexData = hexlify(data);\n        let fragment = this.getError(hexData.substring(0, 10).toLowerCase());\n        if (!fragment) {\n            return null;\n        }\n        return new ErrorDescription({\n            args: this._abiCoder.decode(fragment.inputs, \"0x\" + hexData.substring(10)),\n            errorFragment: fragment,\n            name: fragment.name,\n            signature: fragment.format(),\n            sighash: this.getSighash(fragment),\n        });\n    }\n    /*\n    static from(value: Array<Fragment | string | JsonAbi> | string | Interface) {\n        if (Interface.isInterface(value)) {\n            return value;\n        }\n        if (typeof(value) === \"string\") {\n            return new Interface(JSON.parse(value));\n        }\n        return new Interface(value);\n    }\n    */\n    static isInterface(value) {\n        return !!(value && value._isInterface);\n    }\n}\n//# sourceMappingURL=interface.js.map","export const version = \"contracts/5.6.2\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { checkResultErrors, Indexed, Interface } from \"@ethersproject/abi\";\nimport { Provider } from \"@ethersproject/abstract-provider\";\nimport { Signer, VoidSigner } from \"@ethersproject/abstract-signer\";\nimport { getAddress, getContractAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, concat, hexlify, isBytes, isHexString } from \"@ethersproject/bytes\";\nimport { defineReadOnly, deepCopy, getStatic, resolveProperties, shallowCopy } from \"@ethersproject/properties\";\nimport { accessListify } from \"@ethersproject/transactions\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n;\n;\n///////////////////////////////\nconst allowedTransactionKeys = {\n    chainId: true, data: true, from: true, gasLimit: true, gasPrice: true, nonce: true, to: true, value: true,\n    type: true, accessList: true,\n    maxFeePerGas: true, maxPriorityFeePerGas: true,\n    customData: true,\n    ccipReadEnabled: true\n};\nfunction resolveName(resolver, nameOrPromise) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const name = yield nameOrPromise;\n        if (typeof (name) !== \"string\") {\n            logger.throwArgumentError(\"invalid address or ENS name\", \"name\", name);\n        }\n        // If it is already an address, just use it (after adding checksum)\n        try {\n            return getAddress(name);\n        }\n        catch (error) { }\n        if (!resolver) {\n            logger.throwError(\"a provider or signer is needed to resolve ENS names\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"resolveName\"\n            });\n        }\n        const address = yield resolver.resolveName(name);\n        if (address == null) {\n            logger.throwArgumentError(\"resolver or addr is not configured for ENS name\", \"name\", name);\n        }\n        return address;\n    });\n}\n// Recursively replaces ENS names with promises to resolve the name and resolves all properties\nfunction resolveAddresses(resolver, value, paramType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (Array.isArray(paramType)) {\n            return yield Promise.all(paramType.map((paramType, index) => {\n                return resolveAddresses(resolver, ((Array.isArray(value)) ? value[index] : value[paramType.name]), paramType);\n            }));\n        }\n        if (paramType.type === \"address\") {\n            return yield resolveName(resolver, value);\n        }\n        if (paramType.type === \"tuple\") {\n            return yield resolveAddresses(resolver, value, paramType.components);\n        }\n        if (paramType.baseType === \"array\") {\n            if (!Array.isArray(value)) {\n                return Promise.reject(logger.makeError(\"invalid value for array\", Logger.errors.INVALID_ARGUMENT, {\n                    argument: \"value\",\n                    value\n                }));\n            }\n            return yield Promise.all(value.map((v) => resolveAddresses(resolver, v, paramType.arrayChildren)));\n        }\n        return value;\n    });\n}\nfunction populateTransaction(contract, fragment, args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // If an extra argument is given, it is overrides\n        let overrides = {};\n        if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            overrides = shallowCopy(args.pop());\n        }\n        // Make sure the parameter count matches\n        logger.checkArgumentCount(args.length, fragment.inputs.length, \"passed to contract\");\n        // Populate \"from\" override (allow promises)\n        if (contract.signer) {\n            if (overrides.from) {\n                // Contracts with a Signer are from the Signer's frame-of-reference;\n                // but we allow overriding \"from\" if it matches the signer\n                overrides.from = resolveProperties({\n                    override: resolveName(contract.signer, overrides.from),\n                    signer: contract.signer.getAddress()\n                }).then((check) => __awaiter(this, void 0, void 0, function* () {\n                    if (getAddress(check.signer) !== check.override) {\n                        logger.throwError(\"Contract with a Signer cannot override from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            operation: \"overrides.from\"\n                        });\n                    }\n                    return check.override;\n                }));\n            }\n            else {\n                overrides.from = contract.signer.getAddress();\n            }\n        }\n        else if (overrides.from) {\n            overrides.from = resolveName(contract.provider, overrides.from);\n            //} else {\n            // Contracts without a signer can override \"from\", and if\n            // unspecified the zero address is used\n            //overrides.from = AddressZero;\n        }\n        // Wait for all dependencies to be resolved (prefer the signer over the provider)\n        const resolved = yield resolveProperties({\n            args: resolveAddresses(contract.signer || contract.provider, args, fragment.inputs),\n            address: contract.resolvedAddress,\n            overrides: (resolveProperties(overrides) || {})\n        });\n        // The ABI coded transaction\n        const data = contract.interface.encodeFunctionData(fragment, resolved.args);\n        const tx = {\n            data: data,\n            to: resolved.address\n        };\n        // Resolved Overrides\n        const ro = resolved.overrides;\n        // Populate simple overrides\n        if (ro.nonce != null) {\n            tx.nonce = BigNumber.from(ro.nonce).toNumber();\n        }\n        if (ro.gasLimit != null) {\n            tx.gasLimit = BigNumber.from(ro.gasLimit);\n        }\n        if (ro.gasPrice != null) {\n            tx.gasPrice = BigNumber.from(ro.gasPrice);\n        }\n        if (ro.maxFeePerGas != null) {\n            tx.maxFeePerGas = BigNumber.from(ro.maxFeePerGas);\n        }\n        if (ro.maxPriorityFeePerGas != null) {\n            tx.maxPriorityFeePerGas = BigNumber.from(ro.maxPriorityFeePerGas);\n        }\n        if (ro.from != null) {\n            tx.from = ro.from;\n        }\n        if (ro.type != null) {\n            tx.type = ro.type;\n        }\n        if (ro.accessList != null) {\n            tx.accessList = accessListify(ro.accessList);\n        }\n        // If there was no \"gasLimit\" override, but the ABI specifies a default, use it\n        if (tx.gasLimit == null && fragment.gas != null) {\n            // Compute the intrinsic gas cost for this transaction\n            // @TODO: This is based on the yellow paper as of Petersburg; this is something\n            // we may wish to parameterize in v6 as part of the Network object. Since this\n            // is always a non-nil to address, we can ignore G_create, but may wish to add\n            // similar logic to the ContractFactory.\n            let intrinsic = 21000;\n            const bytes = arrayify(data);\n            for (let i = 0; i < bytes.length; i++) {\n                intrinsic += 4;\n                if (bytes[i]) {\n                    intrinsic += 64;\n                }\n            }\n            tx.gasLimit = BigNumber.from(fragment.gas).add(intrinsic);\n        }\n        // Populate \"value\" override\n        if (ro.value) {\n            const roValue = BigNumber.from(ro.value);\n            if (!roValue.isZero() && !fragment.payable) {\n                logger.throwError(\"non-payable method cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: overrides.value\n                });\n            }\n            tx.value = roValue;\n        }\n        if (ro.customData) {\n            tx.customData = shallowCopy(ro.customData);\n        }\n        if (ro.ccipReadEnabled) {\n            tx.ccipReadEnabled = !!ro.ccipReadEnabled;\n        }\n        // Remove the overrides\n        delete overrides.nonce;\n        delete overrides.gasLimit;\n        delete overrides.gasPrice;\n        delete overrides.from;\n        delete overrides.value;\n        delete overrides.type;\n        delete overrides.accessList;\n        delete overrides.maxFeePerGas;\n        delete overrides.maxPriorityFeePerGas;\n        delete overrides.customData;\n        delete overrides.ccipReadEnabled;\n        // Make sure there are no stray overrides, which may indicate a\n        // typo or using an unsupported key.\n        const leftovers = Object.keys(overrides).filter((key) => (overrides[key] != null));\n        if (leftovers.length) {\n            logger.throwError(`cannot override ${leftovers.map((l) => JSON.stringify(l)).join(\",\")}`, Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"overrides\",\n                overrides: leftovers\n            });\n        }\n        return tx;\n    });\n}\nfunction buildPopulate(contract, fragment) {\n    return function (...args) {\n        return populateTransaction(contract, fragment, args);\n    };\n}\nfunction buildEstimate(contract, fragment) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!signerOrProvider) {\n                logger.throwError(\"estimate require a provider or signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"estimateGas\"\n                });\n            }\n            const tx = yield populateTransaction(contract, fragment, args);\n            return yield signerOrProvider.estimateGas(tx);\n        });\n    };\n}\nfunction addContractWait(contract, tx) {\n    const wait = tx.wait.bind(tx);\n    tx.wait = (confirmations) => {\n        return wait(confirmations).then((receipt) => {\n            receipt.events = receipt.logs.map((log) => {\n                let event = deepCopy(log);\n                let parsed = null;\n                try {\n                    parsed = contract.interface.parseLog(log);\n                }\n                catch (e) { }\n                // Successfully parsed the event log; include it\n                if (parsed) {\n                    event.args = parsed.args;\n                    event.decode = (data, topics) => {\n                        return contract.interface.decodeEventLog(parsed.eventFragment, data, topics);\n                    };\n                    event.event = parsed.name;\n                    event.eventSignature = parsed.signature;\n                }\n                // Useful operations\n                event.removeListener = () => { return contract.provider; };\n                event.getBlock = () => {\n                    return contract.provider.getBlock(receipt.blockHash);\n                };\n                event.getTransaction = () => {\n                    return contract.provider.getTransaction(receipt.transactionHash);\n                };\n                event.getTransactionReceipt = () => {\n                    return Promise.resolve(receipt);\n                };\n                return event;\n            });\n            return receipt;\n        });\n    };\n}\nfunction buildCall(contract, fragment, collapseSimple) {\n    const signerOrProvider = (contract.signer || contract.provider);\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Extract the \"blockTag\" override if present\n            let blockTag = undefined;\n            if (args.length === fragment.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n                const overrides = shallowCopy(args.pop());\n                if (overrides.blockTag != null) {\n                    blockTag = yield overrides.blockTag;\n                }\n                delete overrides.blockTag;\n                args.push(overrides);\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed(blockTag);\n            }\n            // Call a node and get the result\n            const tx = yield populateTransaction(contract, fragment, args);\n            const result = yield signerOrProvider.call(tx, blockTag);\n            try {\n                let value = contract.interface.decodeFunctionResult(fragment, result);\n                if (collapseSimple && fragment.outputs.length === 1) {\n                    value = value[0];\n                }\n                return value;\n            }\n            catch (error) {\n                if (error.code === Logger.errors.CALL_EXCEPTION) {\n                    error.address = contract.address;\n                    error.args = args;\n                    error.transaction = tx;\n                }\n                throw error;\n            }\n        });\n    };\n}\nfunction buildSend(contract, fragment) {\n    return function (...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!contract.signer) {\n                logger.throwError(\"sending a transaction requires a signer\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"sendTransaction\"\n                });\n            }\n            // If the contract was just deployed, wait until it is mined\n            if (contract.deployTransaction != null) {\n                yield contract._deployed();\n            }\n            const txRequest = yield populateTransaction(contract, fragment, args);\n            const tx = yield contract.signer.sendTransaction(txRequest);\n            // Tweak the tx.wait so the receipt has extra properties\n            addContractWait(contract, tx);\n            return tx;\n        });\n    };\n}\nfunction buildDefault(contract, fragment, collapseSimple) {\n    if (fragment.constant) {\n        return buildCall(contract, fragment, collapseSimple);\n    }\n    return buildSend(contract, fragment);\n}\nfunction getEventTag(filter) {\n    if (filter.address && (filter.topics == null || filter.topics.length === 0)) {\n        return \"*\";\n    }\n    return (filter.address || \"*\") + \"@\" + (filter.topics ? filter.topics.map((topic) => {\n        if (Array.isArray(topic)) {\n            return topic.join(\"|\");\n        }\n        return topic;\n    }).join(\":\") : \"\");\n}\nclass RunningEvent {\n    constructor(tag, filter) {\n        defineReadOnly(this, \"tag\", tag);\n        defineReadOnly(this, \"filter\", filter);\n        this._listeners = [];\n    }\n    addListener(listener, once) {\n        this._listeners.push({ listener: listener, once: once });\n    }\n    removeListener(listener) {\n        let done = false;\n        this._listeners = this._listeners.filter((item) => {\n            if (done || item.listener !== listener) {\n                return true;\n            }\n            done = true;\n            return false;\n        });\n    }\n    removeAllListeners() {\n        this._listeners = [];\n    }\n    listeners() {\n        return this._listeners.map((i) => i.listener);\n    }\n    listenerCount() {\n        return this._listeners.length;\n    }\n    run(args) {\n        const listenerCount = this.listenerCount();\n        this._listeners = this._listeners.filter((item) => {\n            const argsCopy = args.slice();\n            // Call the callback in the next event loop\n            setTimeout(() => {\n                item.listener.apply(this, argsCopy);\n            }, 0);\n            // Reschedule it if it not \"once\"\n            return !(item.once);\n        });\n        return listenerCount;\n    }\n    prepareEvent(event) {\n    }\n    // Returns the array that will be applied to an emit\n    getEmit(event) {\n        return [event];\n    }\n}\nclass ErrorRunningEvent extends RunningEvent {\n    constructor() {\n        super(\"error\", null);\n    }\n}\n// @TODO Fragment should inherit Wildcard? and just override getEmit?\n//       or have a common abstract super class, with enough constructor\n//       options to configure both.\n// A Fragment Event will populate all the properties that Wildcard\n// will, and additionally dereference the arguments when emitting\nclass FragmentRunningEvent extends RunningEvent {\n    constructor(address, contractInterface, fragment, topics) {\n        const filter = {\n            address: address\n        };\n        let topic = contractInterface.getEventTopic(fragment);\n        if (topics) {\n            if (topic !== topics[0]) {\n                logger.throwArgumentError(\"topic mismatch\", \"topics\", topics);\n            }\n            filter.topics = topics.slice();\n        }\n        else {\n            filter.topics = [topic];\n        }\n        super(getEventTag(filter), filter);\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n        defineReadOnly(this, \"fragment\", fragment);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        event.event = this.fragment.name;\n        event.eventSignature = this.fragment.format();\n        event.decode = (data, topics) => {\n            return this.interface.decodeEventLog(this.fragment, data, topics);\n        };\n        try {\n            event.args = this.interface.decodeEventLog(this.fragment, event.data, event.topics);\n        }\n        catch (error) {\n            event.args = null;\n            event.decodeError = error;\n        }\n    }\n    getEmit(event) {\n        const errors = checkResultErrors(event.args);\n        if (errors.length) {\n            throw errors[0].error;\n        }\n        const args = (event.args || []).slice();\n        args.push(event);\n        return args;\n    }\n}\n// A Wildcard Event will attempt to populate:\n//  - event            The name of the event name\n//  - eventSignature   The full signature of the event\n//  - decode           A function to decode data and topics\n//  - args             The decoded data and topics\nclass WildcardRunningEvent extends RunningEvent {\n    constructor(address, contractInterface) {\n        super(\"*\", { address: address });\n        defineReadOnly(this, \"address\", address);\n        defineReadOnly(this, \"interface\", contractInterface);\n    }\n    prepareEvent(event) {\n        super.prepareEvent(event);\n        try {\n            const parsed = this.interface.parseLog(event);\n            event.event = parsed.name;\n            event.eventSignature = parsed.signature;\n            event.decode = (data, topics) => {\n                return this.interface.decodeEventLog(parsed.eventFragment, data, topics);\n            };\n            event.args = parsed.args;\n        }\n        catch (error) {\n            // No matching event\n        }\n    }\n}\nexport class BaseContract {\n    constructor(addressOrName, contractInterface, signerOrProvider) {\n        // @TODO: Maybe still check the addressOrName looks like a valid address or name?\n        //address = getAddress(address);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        if (signerOrProvider == null) {\n            defineReadOnly(this, \"provider\", null);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else if (Signer.isSigner(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider.provider || null);\n            defineReadOnly(this, \"signer\", signerOrProvider);\n        }\n        else if (Provider.isProvider(signerOrProvider)) {\n            defineReadOnly(this, \"provider\", signerOrProvider);\n            defineReadOnly(this, \"signer\", null);\n        }\n        else {\n            logger.throwArgumentError(\"invalid signer or provider\", \"signerOrProvider\", signerOrProvider);\n        }\n        defineReadOnly(this, \"callStatic\", {});\n        defineReadOnly(this, \"estimateGas\", {});\n        defineReadOnly(this, \"functions\", {});\n        defineReadOnly(this, \"populateTransaction\", {});\n        defineReadOnly(this, \"filters\", {});\n        {\n            const uniqueFilters = {};\n            Object.keys(this.interface.events).forEach((eventSignature) => {\n                const event = this.interface.events[eventSignature];\n                defineReadOnly(this.filters, eventSignature, (...args) => {\n                    return {\n                        address: this.address,\n                        topics: this.interface.encodeFilterTopics(event, args)\n                    };\n                });\n                if (!uniqueFilters[event.name]) {\n                    uniqueFilters[event.name] = [];\n                }\n                uniqueFilters[event.name].push(eventSignature);\n            });\n            Object.keys(uniqueFilters).forEach((name) => {\n                const filters = uniqueFilters[name];\n                if (filters.length === 1) {\n                    defineReadOnly(this.filters, name, this.filters[filters[0]]);\n                }\n                else {\n                    logger.warn(`Duplicate definition of ${name} (${filters.join(\", \")})`);\n                }\n            });\n        }\n        defineReadOnly(this, \"_runningEvents\", {});\n        defineReadOnly(this, \"_wrappedEmits\", {});\n        if (addressOrName == null) {\n            logger.throwArgumentError(\"invalid contract address or ENS name\", \"addressOrName\", addressOrName);\n        }\n        defineReadOnly(this, \"address\", addressOrName);\n        if (this.provider) {\n            defineReadOnly(this, \"resolvedAddress\", resolveName(this.provider, addressOrName));\n        }\n        else {\n            try {\n                defineReadOnly(this, \"resolvedAddress\", Promise.resolve(getAddress(addressOrName)));\n            }\n            catch (error) {\n                // Without a provider, we cannot use ENS names\n                logger.throwError(\"provider is required to use ENS name as contract address\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"new Contract\"\n                });\n            }\n        }\n        // Swallow bad ENS names to prevent Unhandled Exceptions\n        this.resolvedAddress.catch((e) => { });\n        const uniqueNames = {};\n        const uniqueSignatures = {};\n        Object.keys(this.interface.functions).forEach((signature) => {\n            const fragment = this.interface.functions[signature];\n            // Check that the signature is unique; if not the ABI generation has\n            // not been cleaned or may be incorrectly generated\n            if (uniqueSignatures[signature]) {\n                logger.warn(`Duplicate ABI entry for ${JSON.stringify(signature)}`);\n                return;\n            }\n            uniqueSignatures[signature] = true;\n            // Track unique names; we only expose bare named functions if they\n            // are ambiguous\n            {\n                const name = fragment.name;\n                if (!uniqueNames[`%${name}`]) {\n                    uniqueNames[`%${name}`] = [];\n                }\n                uniqueNames[`%${name}`].push(signature);\n            }\n            if (this[signature] == null) {\n                defineReadOnly(this, signature, buildDefault(this, fragment, true));\n            }\n            // We do not collapse simple calls on this bucket, which allows\n            // frameworks to safely use this without introspection as well as\n            // allows decoding error recovery.\n            if (this.functions[signature] == null) {\n                defineReadOnly(this.functions, signature, buildDefault(this, fragment, false));\n            }\n            if (this.callStatic[signature] == null) {\n                defineReadOnly(this.callStatic, signature, buildCall(this, fragment, true));\n            }\n            if (this.populateTransaction[signature] == null) {\n                defineReadOnly(this.populateTransaction, signature, buildPopulate(this, fragment));\n            }\n            if (this.estimateGas[signature] == null) {\n                defineReadOnly(this.estimateGas, signature, buildEstimate(this, fragment));\n            }\n        });\n        Object.keys(uniqueNames).forEach((name) => {\n            // Ambiguous names to not get attached as bare names\n            const signatures = uniqueNames[name];\n            if (signatures.length > 1) {\n                return;\n            }\n            // Strip off the leading \"%\" used for prototype protection\n            name = name.substring(1);\n            const signature = signatures[0];\n            // If overwriting a member property that is null, swallow the error\n            try {\n                if (this[name] == null) {\n                    defineReadOnly(this, name, this[signature]);\n                }\n            }\n            catch (e) { }\n            if (this.functions[name] == null) {\n                defineReadOnly(this.functions, name, this.functions[signature]);\n            }\n            if (this.callStatic[name] == null) {\n                defineReadOnly(this.callStatic, name, this.callStatic[signature]);\n            }\n            if (this.populateTransaction[name] == null) {\n                defineReadOnly(this.populateTransaction, name, this.populateTransaction[signature]);\n            }\n            if (this.estimateGas[name] == null) {\n                defineReadOnly(this.estimateGas, name, this.estimateGas[signature]);\n            }\n        });\n    }\n    static getContractAddress(transaction) {\n        return getContractAddress(transaction);\n    }\n    static getInterface(contractInterface) {\n        if (Interface.isInterface(contractInterface)) {\n            return contractInterface;\n        }\n        return new Interface(contractInterface);\n    }\n    // @TODO: Allow timeout?\n    deployed() {\n        return this._deployed();\n    }\n    _deployed(blockTag) {\n        if (!this._deployedPromise) {\n            // If we were just deployed, we know the transaction we should occur in\n            if (this.deployTransaction) {\n                this._deployedPromise = this.deployTransaction.wait().then(() => {\n                    return this;\n                });\n            }\n            else {\n                // @TODO: Once we allow a timeout to be passed in, we will wait\n                // up to that many blocks for getCode\n                // Otherwise, poll for our code to be deployed\n                this._deployedPromise = this.provider.getCode(this.address, blockTag).then((code) => {\n                    if (code === \"0x\") {\n                        logger.throwError(\"contract not deployed\", Logger.errors.UNSUPPORTED_OPERATION, {\n                            contractAddress: this.address,\n                            operation: \"getDeployed\"\n                        });\n                    }\n                    return this;\n                });\n            }\n        }\n        return this._deployedPromise;\n    }\n    // @TODO:\n    // estimateFallback(overrides?: TransactionRequest): Promise<BigNumber>\n    // @TODO:\n    // estimateDeploy(bytecode: string, ...args): Promise<BigNumber>\n    fallback(overrides) {\n        if (!this.signer) {\n            logger.throwError(\"sending a transactions require a signer\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"sendTransaction(fallback)\" });\n        }\n        const tx = shallowCopy(overrides || {});\n        [\"from\", \"to\"].forEach(function (key) {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        tx.to = this.resolvedAddress;\n        return this.deployed().then(() => {\n            return this.signer.sendTransaction(tx);\n        });\n    }\n    // Reconnect to a different signer or provider\n    connect(signerOrProvider) {\n        if (typeof (signerOrProvider) === \"string\") {\n            signerOrProvider = new VoidSigner(signerOrProvider, this.provider);\n        }\n        const contract = new (this.constructor)(this.address, this.interface, signerOrProvider);\n        if (this.deployTransaction) {\n            defineReadOnly(contract, \"deployTransaction\", this.deployTransaction);\n        }\n        return contract;\n    }\n    // Re-attach to a different on-chain instance of this contract\n    attach(addressOrName) {\n        return new (this.constructor)(addressOrName, this.interface, this.signer || this.provider);\n    }\n    static isIndexed(value) {\n        return Indexed.isIndexed(value);\n    }\n    _normalizeRunningEvent(runningEvent) {\n        // Already have an instance of this event running; we can re-use it\n        if (this._runningEvents[runningEvent.tag]) {\n            return this._runningEvents[runningEvent.tag];\n        }\n        return runningEvent;\n    }\n    _getRunningEvent(eventName) {\n        if (typeof (eventName) === \"string\") {\n            // Listen for \"error\" events (if your contract has an error event, include\n            // the full signature to bypass this special event keyword)\n            if (eventName === \"error\") {\n                return this._normalizeRunningEvent(new ErrorRunningEvent());\n            }\n            // Listen for any event that is registered\n            if (eventName === \"event\") {\n                return this._normalizeRunningEvent(new RunningEvent(\"event\", null));\n            }\n            // Listen for any event\n            if (eventName === \"*\") {\n                return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n            }\n            // Get the event Fragment (throws if ambiguous/unknown event)\n            const fragment = this.interface.getEvent(eventName);\n            return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment));\n        }\n        // We have topics to filter by...\n        if (eventName.topics && eventName.topics.length > 0) {\n            // Is it a known topichash? (throws if no matching topichash)\n            try {\n                const topic = eventName.topics[0];\n                if (typeof (topic) !== \"string\") {\n                    throw new Error(\"invalid topic\"); // @TODO: May happen for anonymous events\n                }\n                const fragment = this.interface.getEvent(topic);\n                return this._normalizeRunningEvent(new FragmentRunningEvent(this.address, this.interface, fragment, eventName.topics));\n            }\n            catch (error) { }\n            // Filter by the unknown topichash\n            const filter = {\n                address: this.address,\n                topics: eventName.topics\n            };\n            return this._normalizeRunningEvent(new RunningEvent(getEventTag(filter), filter));\n        }\n        return this._normalizeRunningEvent(new WildcardRunningEvent(this.address, this.interface));\n    }\n    _checkRunningEvents(runningEvent) {\n        if (runningEvent.listenerCount() === 0) {\n            delete this._runningEvents[runningEvent.tag];\n            // If we have a poller for this, remove it\n            const emit = this._wrappedEmits[runningEvent.tag];\n            if (emit && runningEvent.filter) {\n                this.provider.off(runningEvent.filter, emit);\n                delete this._wrappedEmits[runningEvent.tag];\n            }\n        }\n    }\n    // Subclasses can override this to gracefully recover\n    // from parse errors if they wish\n    _wrapEvent(runningEvent, log, listener) {\n        const event = deepCopy(log);\n        event.removeListener = () => {\n            if (!listener) {\n                return;\n            }\n            runningEvent.removeListener(listener);\n            this._checkRunningEvents(runningEvent);\n        };\n        event.getBlock = () => { return this.provider.getBlock(log.blockHash); };\n        event.getTransaction = () => { return this.provider.getTransaction(log.transactionHash); };\n        event.getTransactionReceipt = () => { return this.provider.getTransactionReceipt(log.transactionHash); };\n        // This may throw if the topics and data mismatch the signature\n        runningEvent.prepareEvent(event);\n        return event;\n    }\n    _addEventListener(runningEvent, listener, once) {\n        if (!this.provider) {\n            logger.throwError(\"events require a provider or a signer with a provider\", Logger.errors.UNSUPPORTED_OPERATION, { operation: \"once\" });\n        }\n        runningEvent.addListener(listener, once);\n        // Track this running event and its listeners (may already be there; but no hard in updating)\n        this._runningEvents[runningEvent.tag] = runningEvent;\n        // If we are not polling the provider, start polling\n        if (!this._wrappedEmits[runningEvent.tag]) {\n            const wrappedEmit = (log) => {\n                let event = this._wrapEvent(runningEvent, log, listener);\n                // Try to emit the result for the parameterized event...\n                if (event.decodeError == null) {\n                    try {\n                        const args = runningEvent.getEmit(event);\n                        this.emit(runningEvent.filter, ...args);\n                    }\n                    catch (error) {\n                        event.decodeError = error.error;\n                    }\n                }\n                // Always emit \"event\" for fragment-base events\n                if (runningEvent.filter != null) {\n                    this.emit(\"event\", event);\n                }\n                // Emit \"error\" if there was an error\n                if (event.decodeError != null) {\n                    this.emit(\"error\", event.decodeError, event);\n                }\n            };\n            this._wrappedEmits[runningEvent.tag] = wrappedEmit;\n            // Special events, like \"error\" do not have a filter\n            if (runningEvent.filter != null) {\n                this.provider.on(runningEvent.filter, wrappedEmit);\n            }\n        }\n    }\n    queryFilter(event, fromBlockOrBlockhash, toBlock) {\n        const runningEvent = this._getRunningEvent(event);\n        const filter = shallowCopy(runningEvent.filter);\n        if (typeof (fromBlockOrBlockhash) === \"string\" && isHexString(fromBlockOrBlockhash, 32)) {\n            if (toBlock != null) {\n                logger.throwArgumentError(\"cannot specify toBlock with blockhash\", \"toBlock\", toBlock);\n            }\n            filter.blockHash = fromBlockOrBlockhash;\n        }\n        else {\n            filter.fromBlock = ((fromBlockOrBlockhash != null) ? fromBlockOrBlockhash : 0);\n            filter.toBlock = ((toBlock != null) ? toBlock : \"latest\");\n        }\n        return this.provider.getLogs(filter).then((logs) => {\n            return logs.map((log) => this._wrapEvent(runningEvent, log, null));\n        });\n    }\n    on(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, false);\n        return this;\n    }\n    once(event, listener) {\n        this._addEventListener(this._getRunningEvent(event), listener, true);\n        return this;\n    }\n    emit(eventName, ...args) {\n        if (!this.provider) {\n            return false;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        const result = (runningEvent.run(args) > 0);\n        // May have drained all the \"once\" events; check for living events\n        this._checkRunningEvents(runningEvent);\n        return result;\n    }\n    listenerCount(eventName) {\n        if (!this.provider) {\n            return 0;\n        }\n        if (eventName == null) {\n            return Object.keys(this._runningEvents).reduce((accum, key) => {\n                return accum + this._runningEvents[key].listenerCount();\n            }, 0);\n        }\n        return this._getRunningEvent(eventName).listenerCount();\n    }\n    listeners(eventName) {\n        if (!this.provider) {\n            return [];\n        }\n        if (eventName == null) {\n            const result = [];\n            for (let tag in this._runningEvents) {\n                this._runningEvents[tag].listeners().forEach((listener) => {\n                    result.push(listener);\n                });\n            }\n            return result;\n        }\n        return this._getRunningEvent(eventName).listeners();\n    }\n    removeAllListeners(eventName) {\n        if (!this.provider) {\n            return this;\n        }\n        if (eventName == null) {\n            for (const tag in this._runningEvents) {\n                const runningEvent = this._runningEvents[tag];\n                runningEvent.removeAllListeners();\n                this._checkRunningEvents(runningEvent);\n            }\n            return this;\n        }\n        // Delete any listeners\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeAllListeners();\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    off(eventName, listener) {\n        if (!this.provider) {\n            return this;\n        }\n        const runningEvent = this._getRunningEvent(eventName);\n        runningEvent.removeListener(listener);\n        this._checkRunningEvents(runningEvent);\n        return this;\n    }\n    removeListener(eventName, listener) {\n        return this.off(eventName, listener);\n    }\n}\nexport class Contract extends BaseContract {\n}\nexport class ContractFactory {\n    constructor(contractInterface, bytecode, signer) {\n        let bytecodeHex = null;\n        if (typeof (bytecode) === \"string\") {\n            bytecodeHex = bytecode;\n        }\n        else if (isBytes(bytecode)) {\n            bytecodeHex = hexlify(bytecode);\n        }\n        else if (bytecode && typeof (bytecode.object) === \"string\") {\n            // Allow the bytecode object from the Solidity compiler\n            bytecodeHex = bytecode.object;\n        }\n        else {\n            // Crash in the next verification step\n            bytecodeHex = \"!\";\n        }\n        // Make sure it is 0x prefixed\n        if (bytecodeHex.substring(0, 2) !== \"0x\") {\n            bytecodeHex = \"0x\" + bytecodeHex;\n        }\n        // Make sure the final result is valid bytecode\n        if (!isHexString(bytecodeHex) || (bytecodeHex.length % 2)) {\n            logger.throwArgumentError(\"invalid bytecode\", \"bytecode\", bytecode);\n        }\n        // If we have a signer, make sure it is valid\n        if (signer && !Signer.isSigner(signer)) {\n            logger.throwArgumentError(\"invalid signer\", \"signer\", signer);\n        }\n        defineReadOnly(this, \"bytecode\", bytecodeHex);\n        defineReadOnly(this, \"interface\", getStatic(new.target, \"getInterface\")(contractInterface));\n        defineReadOnly(this, \"signer\", signer || null);\n    }\n    // @TODO: Future; rename to populateTransaction?\n    getDeployTransaction(...args) {\n        let tx = {};\n        // If we have 1 additional argument, we allow transaction overrides\n        if (args.length === this.interface.deploy.inputs.length + 1 && typeof (args[args.length - 1]) === \"object\") {\n            tx = shallowCopy(args.pop());\n            for (const key in tx) {\n                if (!allowedTransactionKeys[key]) {\n                    throw new Error(\"unknown transaction override \" + key);\n                }\n            }\n        }\n        // Do not allow these to be overridden in a deployment transaction\n        [\"data\", \"from\", \"to\"].forEach((key) => {\n            if (tx[key] == null) {\n                return;\n            }\n            logger.throwError(\"cannot override \" + key, Logger.errors.UNSUPPORTED_OPERATION, { operation: key });\n        });\n        if (tx.value) {\n            const value = BigNumber.from(tx.value);\n            if (!value.isZero() && !this.interface.deploy.payable) {\n                logger.throwError(\"non-payable constructor cannot override value\", Logger.errors.UNSUPPORTED_OPERATION, {\n                    operation: \"overrides.value\",\n                    value: tx.value\n                });\n            }\n        }\n        // Make sure the call matches the constructor signature\n        logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n        // Set the data to the bytecode + the encoded constructor arguments\n        tx.data = hexlify(concat([\n            this.bytecode,\n            this.interface.encodeDeploy(args)\n        ]));\n        return tx;\n    }\n    deploy(...args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let overrides = {};\n            // If 1 extra parameter was passed in, it contains overrides\n            if (args.length === this.interface.deploy.inputs.length + 1) {\n                overrides = args.pop();\n            }\n            // Make sure the call matches the constructor signature\n            logger.checkArgumentCount(args.length, this.interface.deploy.inputs.length, \" in Contract constructor\");\n            // Resolve ENS names and promises in the arguments\n            const params = yield resolveAddresses(this.signer, args, this.interface.deploy.inputs);\n            params.push(overrides);\n            // Get the deployment transaction (with optional overrides)\n            const unsignedTx = this.getDeployTransaction(...params);\n            // Send the deployment transaction\n            const tx = yield this.signer.sendTransaction(unsignedTx);\n            const address = getStatic(this.constructor, \"getContractAddress\")(tx);\n            const contract = getStatic(this.constructor, \"getContract\")(address, this.interface, this.signer);\n            // Add the modified wait that wraps events\n            addContractWait(contract, tx);\n            defineReadOnly(contract, \"deployTransaction\", tx);\n            return contract;\n        });\n    }\n    attach(address) {\n        return (this.constructor).getContract(address, this.interface, this.signer);\n    }\n    connect(signer) {\n        return new (this.constructor)(this.interface, this.bytecode, signer);\n    }\n    static fromSolidity(compilerOutput, signer) {\n        if (compilerOutput == null) {\n            logger.throwError(\"missing compiler output\", Logger.errors.MISSING_ARGUMENT, { argument: \"compilerOutput\" });\n        }\n        if (typeof (compilerOutput) === \"string\") {\n            compilerOutput = JSON.parse(compilerOutput);\n        }\n        const abi = compilerOutput.abi;\n        let bytecode = null;\n        if (compilerOutput.bytecode) {\n            bytecode = compilerOutput.bytecode;\n        }\n        else if (compilerOutput.evm && compilerOutput.evm.bytecode) {\n            bytecode = compilerOutput.evm.bytecode;\n        }\n        return new this(abi, bytecode, signer);\n    }\n    static getInterface(contractInterface) {\n        return Contract.getInterface(contractInterface);\n    }\n    static getContractAddress(tx) {\n        return getContractAddress(tx);\n    }\n    static getContract(address, contractInterface, signer) {\n        return new Contract(address, contractInterface, signer);\n    }\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport { arrayify, hexZeroPad, isBytes } from \"@ethersproject/bytes\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nimport { BigNumber, isBigNumberish } from \"./bignumber\";\nconst _constructorGuard = {};\nconst Zero = BigNumber.from(0);\nconst NegativeOne = BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    const params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nlet zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nexport function formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = BigNumber.from(value);\n    const negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    let fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    const whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexport function parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    const multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    const negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    const comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    let whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    const wholeValue = BigNumber.from(whole);\n    const fractionValue = BigNumber.from(fraction);\n    let wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexport class FixedFormat {\n    constructor(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    static from(value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = `fixed128x${value}`;\n        }\n        let signed = true;\n        let width = 128;\n        let decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                const match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            const check = (key, type, defaultValue) => {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    }\n}\nexport class FixedNumber {\n    constructor(constructorGuard, hex, value, format) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    _checkFormat(other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    }\n    addUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    }\n    subUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    }\n    mulUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    }\n    divUnsafe(other) {\n        this._checkFormat(other);\n        const a = parseFixed(this._value, this.format.decimals);\n        const b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    }\n    floor() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    ceiling() {\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        let result = FixedNumber.from(comps[0], this.format);\n        const hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    }\n    // @TODO: Support other rounding algorithms\n    round(decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        const comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        const factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        const bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    }\n    isZero() {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    }\n    isNegative() {\n        return (this._value[0] === \"-\");\n    }\n    toString() { return this._value; }\n    toHexString(width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        const hex = BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return hexZeroPad(hex, width / 8);\n    }\n    toUnsafeFloat() { return parseFloat(this.toString()); }\n    toFormat(format) {\n        return FixedNumber.fromString(this._value, format);\n    }\n    static fromValue(value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !isBigNumberish(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    }\n    static fromString(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        const numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        let hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = hexZeroPad(hex, fixedFormat.width / 8);\n        }\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static fromBytes(value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        const fixedFormat = FixedFormat.from(format);\n        if (arrayify(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        let numeric = BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        const hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        const decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    }\n    static from(value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if (isBytes(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    }\n    static isFixedNumber(value) {\n        return !!(value && value._isFixedNumber);\n    }\n}\nconst ONE = FixedNumber.from(1);\nconst BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map","export const version = \"units/5.6.1\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { formatFixed, parseFixed } from \"@ethersproject/bignumber\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nconst names = [\n    \"wei\",\n    \"kwei\",\n    \"mwei\",\n    \"gwei\",\n    \"szabo\",\n    \"finney\",\n    \"ether\",\n];\n// Some environments have issues with RegEx that contain back-tracking, so we cannot\n// use them.\nexport function commify(value) {\n    const comps = String(value).split(\".\");\n    if (comps.length > 2 || !comps[0].match(/^-?[0-9]*$/) || (comps[1] && !comps[1].match(/^[0-9]*$/)) || value === \".\" || value === \"-.\") {\n        logger.throwArgumentError(\"invalid value\", \"value\", value);\n    }\n    // Make sure we have at least one whole digit (0 if none)\n    let whole = comps[0];\n    let negative = \"\";\n    if (whole.substring(0, 1) === \"-\") {\n        negative = \"-\";\n        whole = whole.substring(1);\n    }\n    // Make sure we have at least 1 whole digit with no leading zeros\n    while (whole.substring(0, 1) === \"0\") {\n        whole = whole.substring(1);\n    }\n    if (whole === \"\") {\n        whole = \"0\";\n    }\n    let suffix = \"\";\n    if (comps.length === 2) {\n        suffix = \".\" + (comps[1] || \"0\");\n    }\n    while (suffix.length > 2 && suffix[suffix.length - 1] === \"0\") {\n        suffix = suffix.substring(0, suffix.length - 1);\n    }\n    const formatted = [];\n    while (whole.length) {\n        if (whole.length <= 3) {\n            formatted.unshift(whole);\n            break;\n        }\n        else {\n            const index = whole.length - 3;\n            formatted.unshift(whole.substring(index));\n            whole = whole.substring(0, index);\n        }\n    }\n    return negative + formatted.join(\",\") + suffix;\n}\nexport function formatUnits(value, unitName) {\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return formatFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function parseUnits(value, unitName) {\n    if (typeof (value) !== \"string\") {\n        logger.throwArgumentError(\"value must be a string\", \"value\", value);\n    }\n    if (typeof (unitName) === \"string\") {\n        const index = names.indexOf(unitName);\n        if (index !== -1) {\n            unitName = 3 * index;\n        }\n    }\n    return parseFixed(value, (unitName != null) ? unitName : 18);\n}\nexport function formatEther(wei) {\n    return formatUnits(wei, 18);\n}\nexport function parseEther(ether) {\n    return parseUnits(ether, 18);\n}\n//# sourceMappingURL=index.js.map","import { render } from \"./FormApply.vue?vue&type=template&id=611a064c\"\nimport script from \"./FormApply.vue?vue&type=script&lang=js\"\nexport * from \"./FormApply.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"grid grid-cols-12\" v-if=\"'fields' in proposal\">\n    <div class=\"col-span-12\">\n      <form class=\"flex items-center\">\n        <div class=\"w-screen\">\n          <label\n            class=\"flex block text-3xl md:text-4xl mb-4 items-center justify-left\"\n            ><span class=\"text-sm mr-1\">1</span>\n            <svg height=\"10\" width=\"11\" class=\"mr-4\">\n              <path\n                class=\"fill-electric\"\n                d=\"M7.586 5L4.293 1.707 5.707.293 10.414 5 5.707 9.707 4.293 8.293z\"\n              ></path>\n              <path d=\"M8 4v2H0V4z\"></path></svg\n            >{{ proposal.fields.proposalType[\"en-US\"][0] }}<br />#{{\n              id\n            }}*</label\n          >\n          <ul class=\"flex\">\n            <li class=\"mr-4\">\n              <span class=\"text-xs\">vote start: </span\n              >{{ proposal.fields.startDate[\"en-US\"] }}\n            </li>\n            <li>\n              <span class=\"text-xs\">vote end: </span\n              >{{ proposal.fields.endDate[\"en-US\"] }}\n            </li>\n          </ul>\n          <div class=\"grid grid-cols-12\">\n            <div class=\"col-span-6\">\n              <p class=\"text-2xl my-4\">\n                {{ proposal.fields.meta[\"en-US\"].usdc }} for\n                {{ proposal.fields.meta[\"en-US\"].s }} Salon units\n              </p>\n\n              <p class=\"text-2xl my-4\">\n                {{ proposal.fields.meta[\"en-US\"].profile.firstName[\"en-US\"]\n                }}<br />\n                {{ proposal.fields.meta[\"en-US\"].profile.lastName[\"en-US\"]\n                }}<br />\n              </p>\n              <p class=\"text-sm mt-12\">\n                {{ proposal.fields.meta[\"en-US\"].profile.walletAddress[\"en-US\"]\n                }}<br />\n                {{\n                  proposal.fields.meta[\"en-US\"].profile.emailAddress[\"en-US\"]\n                }}\n              </p>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nexport default {\n  components: {},\n  props: [\"id\"],\n  data() {\n    return {\n      proposal: {},\n    };\n  },\n  async beforeMount() {\n    console.log(\"loading proposal!\");\n    try {\n      const res = await axios.get(\n        \"https://salontest-terrifickid.cloud.okteto.net/entry/\" + this.id\n      );\n      this.proposal = res.data;\n    } catch (error) {\n      console.log(\"error\", error);\n    }\n  },\n};\n</script>\n","import { render } from \"./FormProposal.vue?vue&type=template&id=1a86c8dc\"\nimport script from \"./FormProposal.vue?vue&type=script&lang=js\"\nexport * from \"./FormProposal.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./ViewJoin.vue?vue&type=template&id=b2984aac\"\nimport script from \"./ViewJoin.vue?vue&type=script&lang=js\"\nexport * from \"./ViewJoin.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/tk/oz.salon.dapp/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","script","__exports__","render","href","backgroundClass","color","colors","props","components","AppLogo","version","id","xmlns","x","y","viewBox","style","d","walletAddress","textClass","fillClass","connect","AppFooter","AppHeader","methods","this","$store","dispatch","WalletConnect","computed","profile","state","connecting","ready","mounted","console","log","background","disconnect","isKycApproved","isNew","isApplied","isMember","onboard","sys","firstName","htmlFor","className","name","value","type","submitForm","userAddress","legalNameOfPerson","disabled","sending","btnTxt","data","async","res","error","createProposal","placeholder","required","usdcAmount","sAmount","processing","logger","checkResultErrors","result","errors","checkErrors","path","object","Array","isArray","key","childPath","slice","push","Coder","constructor","localName","dynamic","_throwError","message","throwArgumentError","Writer","wordSize","_data","_dataLength","_padding","Uint8Array","length","_writeData","appendWriter","writer","writeBytes","bytes","paddingOffset","_getValue","throwError","offset","writeValue","writeUpdatableValue","Reader","coerceFunc","allowLoose","_offset","consumed","static","match","parseInt","toNumber","coerce","_coerceFunc","_peekBytes","loose","alignedLength","Math","ceil","subReader","readBytes","readValue","AddressCoder","super","defaultValue","encode","decode","reader","toHexString","AnonymousCoder","coder","undefined","pack","coders","values","arrayValues","unique","map","argument","staticWriter","dynamicWriter","updateFuncs","forEach","index","dynamicOffset","updateFunc","baseOffset","func","unpack","baseReader","offsetReader","code","baseType","uniqueNames","reduce","accum","Error","Object","defineProperty","enumerable","get","i","freeze","ArrayCoder","defaultChild","count","checkArgumentCount","BooleanCoder","isZero","DynamicBytesCoder","BytesCoder","FixedBytesCoder","size","String","substring","NullCoder","NumberCoder","signed","v","maxUintValue","bounds","mask","gt","lt","add","mul","toTwos","fromTwos","StringCoder","TupleCoder","types","join","_constructorGuard","ModifiersBytes","calldata","memory","storage","ModifiersNest","checkModifier","indexOf","parseParamType","param","allowIndexed","originalParam","newNode","parent","node","allowType","indexed","replace","c","allowParams","verifyType","child","allowName","allowArray","sibling","readArray","populate","params","FormatTypes","sighash","minimal","full","json","paramTypeArray","RegExp","ParamType","constructorGuard","operation","arrayLength","arrayChildren","fromObject","_isParamType","format","comp","JSON","parse","stringify","fromString","isParamType","ParamTypify","parseParams","allowIndex","splitNesting","Fragment","_isFragment","isFragment","FunctionFragment","EventFragment","ConstructorFragment","ErrorFragment","trim","split","anonymous","inputs","input","isEventFragment","verifyIdentifier","regexParen","modifier","warn","parseGas","gas","comps","parseModifiers","constant","payable","stateMutability","verifyState","isConstructorFragment","parens","outputs","output","toString","isFunctionFragment","returns","checkForbidden","fragment","sig","isErrorFragment","regexIdentifier","depth","paramTypeBytes","paramTypeNumber","AbiCoder","_getCoder","component","_getWordSize","_getReader","_getWriter","getDefaultValue","from","defaultAbiCoder","LogDescription","TransactionDescription","ErrorDescription","Indexed","_isIndexed","BuiltinErrors","signature","reason","wrapAccessError","property","wrap","Interface","fragments","abi","filter","bucket","deploy","functions","events","j","address","eventFragment","getFunction","nameOrSignatureOrSighash","getSighash","matching","keys","f","getEvent","nameOrSignatureOrTopic","topichash","toLowerCase","getEventTopic","getError","_","_decodeParams","_abiCoder","_encodeParams","encodeDeploy","decodeErrorResult","encodeErrorResult","decodeFunctionData","functionFragment","encodeFunctionData","decodeFunctionResult","errorArgs","errorName","errorSignature","selector","builtin","method","encodeFunctionResult","encodeFilterTopics","topics","encodeTopic","pop","encodeEventLog","dataTypes","dataValues","decodeEventLog","topicHash","expected","nonIndexed","resultIndexed","resultNonIndexed","nonIndexedIndex","indexedIndex","hash","parseTransaction","tx","args","parseLog","topic","parseError","hexData","errorFragment","_isInterface","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","done","then","apply","resolveName","resolver","nameOrPromise","resolveAddresses","paramType","all","makeError","populateTransaction","contract","overrides","signer","override","getAddress","check","provider","resolved","resolvedAddress","interface","to","ro","nonce","gasLimit","gasPrice","maxFeePerGas","maxPriorityFeePerGas","accessList","intrinsic","roValue","customData","ccipReadEnabled","leftovers","l","buildPopulate","buildEstimate","signerOrProvider","estimateGas","addContractWait","wait","bind","confirmations","receipt","logs","event","parsed","eventSignature","removeListener","getBlock","blockHash","getTransaction","transactionHash","getTransactionReceipt","buildCall","collapseSimple","blockTag","deployTransaction","_deployed","call","transaction","buildSend","txRequest","sendTransaction","buildDefault","getEventTag","RunningEvent","tag","_listeners","addListener","listener","once","item","removeAllListeners","listeners","listenerCount","run","argsCopy","setTimeout","prepareEvent","getEmit","ErrorRunningEvent","FragmentRunningEvent","contractInterface","decodeError","WildcardRunningEvent","BaseContract","addressOrName","uniqueFilters","filters","catch","uniqueSignatures","callStatic","signatures","isInterface","deployed","_deployedPromise","getCode","contractAddress","fallback","attach","isIndexed","_normalizeRunningEvent","runningEvent","_runningEvents","_getRunningEvent","eventName","_checkRunningEvents","emit","_wrappedEmits","off","_wrapEvent","_addEventListener","wrappedEmit","on","queryFilter","fromBlockOrBlockhash","toBlock","fromBlock","getLogs","Contract","Zero","NegativeOne","throwFault","fault","zeros","getMultiplier","decimals","multiplier","negative","fraction","mod","whole","div","parseFixed","wholeValue","fractionValue","wei","FixedFormat","width","_multiplier","FixedNumber","hex","_hex","_value","_isFixedNumber","_checkFormat","other","addUnsafe","a","b","fromValue","subUnsafe","sub","mulUnsafe","divUnsafe","floor","hasFraction","isNegative","ONE","toFormat","ceiling","round","factor","bump","BUMP","toUnsafeFloat","parseFloat","fixedFormat","numeric","decimal","fromBytes","names","parseUnits","unitName","usdc","internalType","ethereum","window","send","getSigner","usdcContract","amt","Number","toFixed","transfer","err","s","height","proposal","fields","proposalType","startDate","endDate","meta","lastName","emailAddress","AppShell","FormKyc","FormApply","AppContent","FormProposal","approved","salonUnits"],"sourceRoot":""}